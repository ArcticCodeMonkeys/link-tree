{"ast":null,"code":"'use strict';\n\nimport { WebEasings } from \"./Easing.web.js\";\nexport function convertAnimationObjectToKeyframes(animationObject) {\n  let keyframe = \"@keyframes \".concat(animationObject.name, \" { \");\n  for (const [timestamp, style] of Object.entries(animationObject.style)) {\n    const step = timestamp === 'from' ? 0 : timestamp === 'to' ? 100 : timestamp;\n    keyframe += \"\".concat(step, \"% { \");\n    for (const [property, values] of Object.entries(style)) {\n      if (property === 'easing') {\n        let easingName = 'linear';\n        if (values in WebEasings) {\n          easingName = values;\n        } else if (values.name in WebEasings) {\n          easingName = values.name;\n        }\n        keyframe += \"animation-timing-function: cubic-bezier(\".concat(WebEasings[easingName].toString(), \");\");\n        continue;\n      }\n      if (property === 'originX') {\n        keyframe += \"left: \".concat(values, \"px; \");\n        continue;\n      }\n      if (property === 'originY') {\n        keyframe += \"top: \".concat(values, \"px; \");\n        continue;\n      }\n      if (property !== 'transform') {\n        keyframe += \"\".concat(property, \": \").concat(values, \"; \");\n        continue;\n      }\n      keyframe += \"transform:\";\n      values.forEach(value => {\n        for (const [transformProperty, transformPropertyValue] of Object.entries(value)) {\n          keyframe += \" \".concat(transformProperty, \"(\").concat(transformPropertyValue, \")\");\n        }\n      });\n      keyframe += \"; \"; // Property end\n    }\n    keyframe += \"} \"; // Timestamp end\n  }\n  keyframe += \"} \"; // Keyframe end\n\n  return keyframe;\n}","map":{"version":3,"names":["WebEasings","convertAnimationObjectToKeyframes","animationObject","keyframe","concat","name","timestamp","style","Object","entries","step","property","values","easingName","toString","forEach","value","transformProperty","transformPropertyValue"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/web/animationParser.ts"],"sourcesContent":["'use strict';\n\nimport { WebEasings } from './Easing.web';\nimport type { WebEasingsNames } from './Easing.web';\n\nexport interface ReanimatedWebTransformProperties {\n  translateX?: string;\n  translateY?: string;\n  rotate?: string;\n  rotateX?: string;\n  rotateY?: string;\n  scale?: number | string;\n  scaleX?: number;\n  scaleY?: number;\n  perspective?: string;\n  skew?: string;\n  skewX?: string;\n}\n\nexport interface AnimationStyle {\n  opacity?: number;\n  transform?: ReanimatedWebTransformProperties[];\n}\n\nexport interface AnimationData {\n  name: string;\n  style: Record<number, AnimationStyle>;\n  duration: number;\n}\n\nexport interface TransitionData {\n  translateX: number;\n  translateY: number;\n  scaleX: number;\n  scaleY: number;\n  reversed?: boolean;\n  easingX?: string;\n  easingY?: string;\n  entering?: any;\n  exiting?: any;\n}\n\nexport function convertAnimationObjectToKeyframes(\n  animationObject: AnimationData\n) {\n  let keyframe = `@keyframes ${animationObject.name} { `;\n\n  for (const [timestamp, style] of Object.entries(animationObject.style)) {\n    const step =\n      timestamp === 'from' ? 0 : timestamp === 'to' ? 100 : timestamp;\n\n    keyframe += `${step}% { `;\n\n    for (const [property, values] of Object.entries(style)) {\n      if (property === 'easing') {\n        let easingName: WebEasingsNames = 'linear';\n\n        if (values in WebEasings) {\n          easingName = values;\n        } else if (values.name in WebEasings) {\n          easingName = values.name;\n        }\n\n        keyframe += `animation-timing-function: cubic-bezier(${WebEasings[\n          easingName\n        ].toString()});`;\n\n        continue;\n      }\n\n      if (property === 'originX') {\n        keyframe += `left: ${values}px; `;\n        continue;\n      }\n\n      if (property === 'originY') {\n        keyframe += `top: ${values}px; `;\n        continue;\n      }\n\n      if (property !== 'transform') {\n        keyframe += `${property}: ${values}; `;\n        continue;\n      }\n\n      keyframe += `transform:`;\n\n      values.forEach((value: ReanimatedWebTransformProperties) => {\n        for (const [\n          transformProperty,\n          transformPropertyValue,\n        ] of Object.entries(value)) {\n          keyframe += ` ${transformProperty}(${transformPropertyValue})`;\n        }\n      });\n      keyframe += `; `; // Property end\n    }\n    keyframe += `} `; // Timestamp end\n  }\n  keyframe += `} `; // Keyframe end\n\n  return keyframe;\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,UAAU,QAAQ,iBAAc;AAwCzC,OAAO,SAASC,iCAAiCA,CAC/CC,eAA8B,EAC9B;EACA,IAAIC,QAAQ,iBAAAC,MAAA,CAAiBF,eAAe,CAACG,IAAI,QAAK;EAEtD,KAAK,MAAM,CAACC,SAAS,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACP,eAAe,CAACK,KAAK,CAAC,EAAE;IACtE,MAAMG,IAAI,GACRJ,SAAS,KAAK,MAAM,GAAG,CAAC,GAAGA,SAAS,KAAK,IAAI,GAAG,GAAG,GAAGA,SAAS;IAEjEH,QAAQ,OAAAC,MAAA,CAAOM,IAAI,SAAM;IAEzB,KAAK,MAAM,CAACC,QAAQ,EAAEC,MAAM,CAAC,IAAIJ,MAAM,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACtD,IAAII,QAAQ,KAAK,QAAQ,EAAE;QACzB,IAAIE,UAA2B,GAAG,QAAQ;QAE1C,IAAID,MAAM,IAAIZ,UAAU,EAAE;UACxBa,UAAU,GAAGD,MAAM;QACrB,CAAC,MAAM,IAAIA,MAAM,CAACP,IAAI,IAAIL,UAAU,EAAE;UACpCa,UAAU,GAAGD,MAAM,CAACP,IAAI;QAC1B;QAEAF,QAAQ,+CAAAC,MAAA,CAA+CJ,UAAU,CAC/Da,UAAU,CACX,CAACC,QAAQ,CAAC,CAAC,OAAI;QAEhB;MACF;MAEA,IAAIH,QAAQ,KAAK,SAAS,EAAE;QAC1BR,QAAQ,aAAAC,MAAA,CAAaQ,MAAM,SAAM;QACjC;MACF;MAEA,IAAID,QAAQ,KAAK,SAAS,EAAE;QAC1BR,QAAQ,YAAAC,MAAA,CAAYQ,MAAM,SAAM;QAChC;MACF;MAEA,IAAID,QAAQ,KAAK,WAAW,EAAE;QAC5BR,QAAQ,OAAAC,MAAA,CAAOO,QAAQ,QAAAP,MAAA,CAAKQ,MAAM,OAAI;QACtC;MACF;MAEAT,QAAQ,gBAAgB;MAExBS,MAAM,CAACG,OAAO,CAAEC,KAAuC,IAAK;QAC1D,KAAK,MAAM,CACTC,iBAAiB,EACjBC,sBAAsB,CACvB,IAAIV,MAAM,CAACC,OAAO,CAACO,KAAK,CAAC,EAAE;UAC1Bb,QAAQ,QAAAC,MAAA,CAAQa,iBAAiB,OAAAb,MAAA,CAAIc,sBAAsB,MAAG;QAChE;MACF,CAAC,CAAC;MACFf,QAAQ,QAAQ,CAAC,CAAC;IACpB;IACAA,QAAQ,QAAQ,CAAC,CAAC;EACpB;EACAA,QAAQ,QAAQ,CAAC,CAAC;;EAElB,OAAOA,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}