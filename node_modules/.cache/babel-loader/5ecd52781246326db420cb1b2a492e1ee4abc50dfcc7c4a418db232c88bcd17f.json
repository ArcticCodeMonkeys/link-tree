{"ast":null,"code":"'use strict';\n\nimport { withSequence, withTiming } from \"../../animation/index.js\";\nimport { BaseAnimationBuilder } from \"../animationBuilder/index.js\";\n\n/**\n * Transforms layout starting from the X-axis and width first, followed by the\n * Y-axis and height. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `layout` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions#sequenced-transition\n */\nexport class SequencedTransition extends BaseAnimationBuilder {\n  static presetName = 'SequencedTransition';\n  reversed = false;\n  static createInstance() {\n    return new SequencedTransition();\n  }\n  static reverse() {\n    const instance = SequencedTransition.createInstance();\n    return instance.reverse();\n  }\n  reverse() {\n    this.reversed = !this.reversed;\n    return this;\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    const halfDuration = (this.durationV ?? 500) / 2;\n    const config = {\n      duration: halfDuration\n    };\n    const reverse = this.reversed;\n    return values => {\n      'worklet';\n\n      return {\n        initialValues: {\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight\n        },\n        animations: {\n          originX: delayFunction(delay, withSequence(withTiming(reverse ? values.currentOriginX : values.targetOriginX, config), withTiming(values.targetOriginX, config))),\n          originY: delayFunction(delay, withSequence(withTiming(reverse ? values.targetOriginY : values.currentOriginY, config), withTiming(values.targetOriginY, config))),\n          width: delayFunction(delay, withSequence(withTiming(reverse ? values.currentWidth : values.targetWidth, config), withTiming(values.targetWidth, config))),\n          height: delayFunction(delay, withSequence(withTiming(reverse ? values.targetHeight : values.currentHeight, config), withTiming(values.targetHeight, config)))\n        },\n        callback\n      };\n    };\n  };\n}","map":{"version":3,"names":["withSequence","withTiming","BaseAnimationBuilder","SequencedTransition","presetName","reversed","createInstance","reverse","instance","build","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","halfDuration","durationV","config","duration","values","initialValues","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","animations","targetOriginX","targetOriginY","targetWidth","targetHeight"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultTransitions/SequencedTransition.ts"],"sourcesContent":["'use strict';\nimport { withSequence, withTiming } from '../../animation';\nimport type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n} from '../animationBuilder/commonTypes';\nimport { BaseAnimationBuilder } from '../animationBuilder';\n\n/**\n * Transforms layout starting from the X-axis and width first, followed by the\n * Y-axis and height. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `layout` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions#sequenced-transition\n */\nexport class SequencedTransition\n  extends BaseAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  static presetName = 'SequencedTransition';\n\n  reversed = false;\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new SequencedTransition() as InstanceType<T>;\n  }\n\n  static reverse(): SequencedTransition {\n    const instance = SequencedTransition.createInstance();\n    return instance.reverse();\n  }\n\n  reverse(): SequencedTransition {\n    this.reversed = !this.reversed;\n    return this;\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    const halfDuration = (this.durationV ?? 500) / 2;\n    const config = { duration: halfDuration };\n    const reverse = this.reversed;\n\n    return (values) => {\n      'worklet';\n      return {\n        initialValues: {\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n        },\n        animations: {\n          originX: delayFunction(\n            delay,\n            withSequence(\n              withTiming(\n                reverse ? values.currentOriginX : values.targetOriginX,\n                config\n              ),\n              withTiming(values.targetOriginX, config)\n            )\n          ),\n          originY: delayFunction(\n            delay,\n            withSequence(\n              withTiming(\n                reverse ? values.targetOriginY : values.currentOriginY,\n                config\n              ),\n              withTiming(values.targetOriginY, config)\n            )\n          ),\n          width: delayFunction(\n            delay,\n            withSequence(\n              withTiming(\n                reverse ? values.currentWidth : values.targetWidth,\n                config\n              ),\n              withTiming(values.targetWidth, config)\n            )\n          ),\n          height: delayFunction(\n            delay,\n            withSequence(\n              withTiming(\n                reverse ? values.targetHeight : values.currentHeight,\n                config\n              ),\n              withTiming(values.targetHeight, config)\n            )\n          ),\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,YAAY,EAAEC,UAAU,QAAQ,0BAAiB;AAK1D,SAASC,oBAAoB,QAAQ,8BAAqB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,SACtBD,oBAAoB,CAE9B;EACE,OAAOE,UAAU,GAAG,qBAAqB;EAEzCC,QAAQ,GAAG,KAAK;EAEhB,OAAOC,cAAcA,CAAA,EAEF;IACjB,OAAO,IAAIH,mBAAmB,CAAC,CAAC;EAClC;EAEA,OAAOI,OAAOA,CAAA,EAAwB;IACpC,MAAMC,QAAQ,GAAGL,mBAAmB,CAACG,cAAc,CAAC,CAAC;IACrD,OAAOE,QAAQ,CAACD,OAAO,CAAC,CAAC;EAC3B;EAEAA,OAAOA,CAAA,EAAwB;IAC7B,IAAI,CAACF,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;IAC9B,OAAO,IAAI;EACb;EAEAI,KAAK,GAAGA,CAAA,KAA+B;IACrC,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC7C,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;IAC/B,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC7B,MAAMC,YAAY,GAAG,CAAC,IAAI,CAACC,SAAS,IAAI,GAAG,IAAI,CAAC;IAChD,MAAMC,MAAM,GAAG;MAAEC,QAAQ,EAAEH;IAAa,CAAC;IACzC,MAAMT,OAAO,GAAG,IAAI,CAACF,QAAQ;IAE7B,OAAQe,MAAM,IAAK;MACjB,SAAS;;MACT,OAAO;QACLC,aAAa,EAAE;UACbC,OAAO,EAAEF,MAAM,CAACG,cAAc;UAC9BC,OAAO,EAAEJ,MAAM,CAACK,cAAc;UAC9BC,KAAK,EAAEN,MAAM,CAACO,YAAY;UAC1BC,MAAM,EAAER,MAAM,CAACS;QACjB,CAAC;QACDC,UAAU,EAAE;UACVR,OAAO,EAAEZ,aAAa,CACpBI,KAAK,EACLd,YAAY,CACVC,UAAU,CACRM,OAAO,GAAGa,MAAM,CAACG,cAAc,GAAGH,MAAM,CAACW,aAAa,EACtDb,MACF,CAAC,EACDjB,UAAU,CAACmB,MAAM,CAACW,aAAa,EAAEb,MAAM,CACzC,CACF,CAAC;UACDM,OAAO,EAAEd,aAAa,CACpBI,KAAK,EACLd,YAAY,CACVC,UAAU,CACRM,OAAO,GAAGa,MAAM,CAACY,aAAa,GAAGZ,MAAM,CAACK,cAAc,EACtDP,MACF,CAAC,EACDjB,UAAU,CAACmB,MAAM,CAACY,aAAa,EAAEd,MAAM,CACzC,CACF,CAAC;UACDQ,KAAK,EAAEhB,aAAa,CAClBI,KAAK,EACLd,YAAY,CACVC,UAAU,CACRM,OAAO,GAAGa,MAAM,CAACO,YAAY,GAAGP,MAAM,CAACa,WAAW,EAClDf,MACF,CAAC,EACDjB,UAAU,CAACmB,MAAM,CAACa,WAAW,EAAEf,MAAM,CACvC,CACF,CAAC;UACDU,MAAM,EAAElB,aAAa,CACnBI,KAAK,EACLd,YAAY,CACVC,UAAU,CACRM,OAAO,GAAGa,MAAM,CAACc,YAAY,GAAGd,MAAM,CAACS,aAAa,EACpDX,MACF,CAAC,EACDjB,UAAU,CAACmB,MAAM,CAACc,YAAY,EAAEhB,MAAM,CACxC,CACF;QACF,CAAC;QACDN;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}