{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-shadow */\n'use strict';\n\nimport { isColor, convertToRGBA, rgbaArrayToRGBAColor, toGammaSpace, toLinearSpace } from \"../Colors.js\";\nimport { ReduceMotion, isWorkletFunction } from \"../commonTypes.js\";\nimport { flatten, multiplyMatrices, scaleMatrix, addMatrices, decomposeMatrixIntoMatricesAndAngles, isAffineMatrixFlat, subtractMatrices, getRotationMatrix } from \"./transformationMatrix/matrixUtils.js\";\nimport { shouldBeUseWeb } from \"../PlatformChecker.js\";\nimport { ReducedMotionManager } from \"../ReducedMotion.js\";\nimport { logger } from \"../logger/index.js\";\nimport { ReanimatedError } from \"../errors.js\";\nlet IN_STYLE_UPDATER = false;\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nif (__DEV__ && ReducedMotionManager.jsValue) {\n  logger.warn(\"Reduced motion setting is enabled on this device. This warning is visible only in the development mode. Some animations will be disabled by default. You can override the behavior for individual animations, see https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#reduced-motion-setting-is-enabled-on-this-device.\");\n}\nexport function assertEasingIsWorklet(easing) {\n  'worklet';\n\n  if (_WORKLET) {\n    // If this is called on UI (for example from gesture handler with worklets), we don't get easing,\n    // but its bound copy, which is not a worklet. We don't want to throw any error then.\n    return;\n  }\n  if (SHOULD_BE_USE_WEB) {\n    // It is possible to run reanimated on web without plugin, so let's skip this check on web\n    return;\n  }\n  // @ts-ignore typescript wants us to use `in` instead, which doesn't work with host objects\n  if (easing !== null && easing !== void 0 && easing.factory) {\n    return;\n  }\n  if (!isWorkletFunction(easing)) {\n    throw new ReanimatedError('The easing function is not a worklet. Please make sure you import `Easing` from react-native-reanimated.');\n  }\n}\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\nexport function recognizePrefixSuffix(value) {\n  'worklet';\n\n  if (typeof value === 'string') {\n    var _match$;\n    const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/);\n    if (!match) {\n      throw new ReanimatedError(\"Couldn't parse animation value.\");\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + ((_match$ = match[3]) !== null && _match$ !== void 0 ? _match$ : '');\n    return {\n      prefix,\n      suffix,\n      strippedValue: parseFloat(number)\n    };\n  } else {\n    return {\n      strippedValue: value\n    };\n  }\n}\n\n/**\n * Returns whether the motion should be reduced for a specified config. By\n * default returns the system setting.\n */\nconst isReduceMotionOnUI = ReducedMotionManager.uiValue;\nexport function getReduceMotionFromConfig(config) {\n  'worklet';\n\n  return !config || config === ReduceMotion.System ? isReduceMotionOnUI.value : config === ReduceMotion.Always;\n}\n\n/**\n * Returns the value that should be assigned to `animation.reduceMotion` for a\n * given config. If the config is not defined, `undefined` is returned.\n */\nexport function getReduceMotionForAnimation(config) {\n  'worklet';\n\n  // if the config is not defined, we want `reduceMotion` to be undefined,\n  // so the parent animation knows if it should overwrite it\n  if (!config) {\n    return undefined;\n  }\n  return getReduceMotionFromConfig(config);\n}\nfunction applyProgressToMatrix(progress, a, b) {\n  'worklet';\n\n  return addMatrices(a, scaleMatrix(subtractMatrices(b, a), progress));\n}\nfunction applyProgressToNumber(progress, a, b) {\n  'worklet';\n\n  return a + progress * (b - a);\n}\nfunction decorateAnimation(animation) {\n  'worklet';\n\n  const baseOnStart = animation.onStart;\n  const baseOnFrame = animation.onFrame;\n  if (animation.isHigherOrder) {\n    animation.onStart = (animation, value, timestamp, previousAnimation) => {\n      if (animation.reduceMotion === undefined) {\n        animation.reduceMotion = getReduceMotionFromConfig();\n      }\n      return baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n    return;\n  }\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n  const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n    var _animation$__prefix, _animation$__suffix;\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const {\n      prefix,\n      suffix,\n      strippedValue\n    } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const {\n      strippedValue: strippedToValue\n    } = recognizePrefixSuffix(animation.toValue);\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue\n      } = recognizePrefixSuffix(previousAnimation.current);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n    animation.current = ((_animation$__prefix = animation.__prefix) !== null && _animation$__prefix !== void 0 ? _animation$__prefix : '') + animation.current + ((_animation$__suffix = animation.__suffix) !== null && _animation$__suffix !== void 0 ? _animation$__suffix : '');\n    if (previousAnimation && previousAnimation !== animation) {\n      var _previousAnimation$__, _previousAnimation$__2;\n      previousAnimation.current = ((_previousAnimation$__ = previousAnimation.__prefix) !== null && _previousAnimation$__ !== void 0 ? _previousAnimation$__ : '') +\n      // FIXME\n      // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n      previousAnimation.current + ((_previousAnimation$__2 = previousAnimation.__suffix) !== null && _previousAnimation$__2 !== void 0 ? _previousAnimation$__2 : '');\n    }\n  };\n  const prefNumberSuffOnFrame = (animation, timestamp) => {\n    var _animation$__prefix2, _animation$__suffix2;\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current = ((_animation$__prefix2 = animation.__prefix) !== null && _animation$__prefix2 !== void 0 ? _animation$__prefix2 : '') + animation.current + ((_animation$__suffix2 = animation.__suffix) !== null && _animation$__suffix2 !== void 0 ? _animation$__suffix2 : '');\n    return res;\n  };\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n    let RGBAValue;\n    let RGBACurrent;\n    let RGBAToValue;\n    const res = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(animation[i], RGBAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n  };\n  const colorOnFrame = (animation, timestamp) => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      res.push(animation[i].current);\n    });\n    animation.current = rgbaArrayToRGBAColor(toGammaSpace(res));\n    return finished;\n  };\n  const transformationMatrixOnStart = (animation, value, timestamp, previousAnimation) => {\n    const toValue = animation.toValue;\n    animation.startMatrices = decomposeMatrixIntoMatricesAndAngles(value);\n    animation.stopMatrices = decomposeMatrixIntoMatricesAndAngles(toValue);\n\n    // We create an animation copy to animate single value between 0 and 100\n    // We set limits from 0 to 100 (instead of 0-1) to make spring look good\n    // with default thresholds.\n\n    animation[0] = Object.assign({}, animationCopy);\n    animation[0].current = 0;\n    animation[0].toValue = 100;\n    animation[0].onStart(animation[0], 0, timestamp, previousAnimation ? previousAnimation[0] : undefined);\n    animation.current = value;\n  };\n  const transformationMatrixOnFrame = (animation, timestamp) => {\n    let finished = true;\n    const result = animation[0].onFrame(animation[0], timestamp);\n    // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n    finished = finished && result;\n    const progress = animation[0].current / 100;\n    const transforms = ['translationMatrix', 'scaleMatrix', 'skewMatrix'];\n    const mappedTransforms = [];\n    transforms.forEach((key, _) => mappedTransforms.push(applyProgressToMatrix(progress, animation.startMatrices[key], animation.stopMatrices[key])));\n    const [currentTranslation, currentScale, skewMatrix] = mappedTransforms;\n    const rotations = ['x', 'y', 'z'];\n    const mappedRotations = [];\n    rotations.forEach((key, _) => {\n      const angle = applyProgressToNumber(progress, animation.startMatrices['r' + key], animation.stopMatrices['r' + key]);\n      mappedRotations.push(getRotationMatrix(angle, key));\n    });\n    const [rotationMatrixX, rotationMatrixY, rotationMatrixZ] = mappedRotations;\n    const rotationMatrix = multiplyMatrices(rotationMatrixX, multiplyMatrices(rotationMatrixY, rotationMatrixZ));\n    const updated = flatten(multiplyMatrices(multiplyMatrices(currentScale, multiplyMatrices(skewMatrix, rotationMatrix)), currentTranslation));\n    animation.current = updated;\n    return finished;\n  };\n  const arrayOnStart = (animation, value, timestamp, previousAnimation) => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = animation.toValue[i];\n      animation[i].onStart(animation[i], v, timestamp, previousAnimation ? previousAnimation[i] : undefined);\n    });\n    animation.current = value;\n  };\n  const arrayOnFrame = (animation, timestamp) => {\n    let finished = true;\n    animation.current.forEach((_, i) => {\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      animation.current[i] = animation[i].current;\n    });\n    return finished;\n  };\n  const objectOnStart = (animation, value, timestamp, previousAnimation) => {\n    for (const key in value) {\n      animation[key] = Object.assign({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n      animation[key].current = value[key];\n      animation[key].toValue = animation.toValue[key];\n      animation[key].onStart(animation[key], value[key], timestamp, previousAnimation ? previousAnimation[key] : undefined);\n    }\n    animation.current = value;\n  };\n  const objectOnFrame = (animation, timestamp) => {\n    let finished = true;\n    const newObject = {};\n    for (const key in animation.current) {\n      const result = animation[key].onFrame(animation[key], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n  animation.onStart = (animation, value, timestamp, previousAnimation) => {\n    if (animation.reduceMotion === undefined) {\n      animation.reduceMotion = getReduceMotionFromConfig();\n    }\n    if (animation.reduceMotion) {\n      if (animation.toValue !== undefined) {\n        animation.current = animation.toValue;\n      } else {\n        // if there is no `toValue`, then the base function is responsible for setting the current value\n        baseOnStart(animation, value, timestamp, previousAnimation);\n      }\n      animation.startTime = 0;\n      animation.onFrame = () => true;\n      return;\n    }\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (isAffineMatrixFlat(value)) {\n      transformationMatrixOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = transformationMatrixOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  const create = () => {\n    'worklet';\n\n    const animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n  if (_WORKLET || SHOULD_BE_USE_WEB) {\n    return create();\n  }\n  create.__isAnimationDefinition = true;\n\n  // @ts-expect-error it's fine\n  return create;\n}\n\n/**\n * Lets you cancel a running animation paired to a shared value.\n *\n * @param sharedValue - The shared value of a running animation that you want to\n *   cancel.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/cancelAnimation\n */\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}","map":{"version":3,"names":["isColor","convertToRGBA","rgbaArrayToRGBAColor","toGammaSpace","toLinearSpace","ReduceMotion","isWorkletFunction","flatten","multiplyMatrices","scaleMatrix","addMatrices","decomposeMatrixIntoMatricesAndAngles","isAffineMatrixFlat","subtractMatrices","getRotationMatrix","shouldBeUseWeb","ReducedMotionManager","logger","ReanimatedError","IN_STYLE_UPDATER","SHOULD_BE_USE_WEB","__DEV__","jsValue","warn","assertEasingIsWorklet","easing","_WORKLET","factory","initialUpdaterRun","updater","result","recognizePrefixSuffix","value","_match$","match","prefix","suffix","number","strippedValue","parseFloat","isReduceMotionOnUI","uiValue","getReduceMotionFromConfig","config","System","Always","getReduceMotionForAnimation","undefined","applyProgressToMatrix","progress","a","b","applyProgressToNumber","decorateAnimation","animation","baseOnStart","onStart","baseOnFrame","onFrame","isHigherOrder","timestamp","previousAnimation","reduceMotion","animationCopy","Object","assign","callback","prefNumberSuffOnStart","_animation$__prefix","_animation$__suffix","__prefix","__suffix","strippedCurrent","strippedToValue","toValue","current","startValue","paPrefix","paSuffix","paStrippedValue","_previousAnimation$__","_previousAnimation$__2","prefNumberSuffOnFrame","_animation$__prefix2","_animation$__suffix2","res","tab","colorOnStart","RGBAValue","RGBACurrent","RGBAToValue","forEach","i","index","push","colorOnFrame","finished","transformationMatrixOnStart","startMatrices","stopMatrices","transformationMatrixOnFrame","transforms","mappedTransforms","key","_","currentTranslation","currentScale","skewMatrix","rotations","mappedRotations","angle","rotationMatrixX","rotationMatrixY","rotationMatrixZ","rotationMatrix","updated","arrayOnStart","v","arrayOnFrame","objectOnStart","objectOnFrame","newObject","startTime","Array","isArray","defineAnimation","starting","create","__isAnimationDefinition","cancelAnimation","sharedValue"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/animation/util.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-shadow */\n'use strict';\nimport type { HigherOrderAnimation, StyleLayoutAnimation } from './commonTypes';\nimport type { ParsedColorArray } from '../Colors';\nimport {\n  isColor,\n  convertToRGBA,\n  rgbaArrayToRGBAColor,\n  toGammaSpace,\n  toLinearSpace,\n} from '../Colors';\nimport { ReduceMotion, isWorkletFunction } from '../commonTypes';\nimport type {\n  SharedValue,\n  AnimatableValue,\n  Animation,\n  AnimationObject,\n  Timestamp,\n  AnimatableValueObject,\n  EasingFunction,\n} from '../commonTypes';\nimport type {\n  AffineMatrixFlat,\n  AffineMatrix,\n} from './transformationMatrix/matrixUtils';\nimport {\n  flatten,\n  multiplyMatrices,\n  scaleMatrix,\n  addMatrices,\n  decomposeMatrixIntoMatricesAndAngles,\n  isAffineMatrixFlat,\n  subtractMatrices,\n  getRotationMatrix,\n} from './transformationMatrix/matrixUtils';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nimport type { EasingFunctionFactory } from '../Easing';\nimport { ReducedMotionManager } from '../ReducedMotion';\nimport { logger } from '../logger';\nimport { ReanimatedError } from '../errors';\n\nlet IN_STYLE_UPDATER = false;\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nif (__DEV__ && ReducedMotionManager.jsValue) {\n  logger.warn(\n    `Reduced motion setting is enabled on this device. This warning is visible only in the development mode. Some animations will be disabled by default. You can override the behavior for individual animations, see https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#reduced-motion-setting-is-enabled-on-this-device.`\n  );\n}\n\nexport function assertEasingIsWorklet(\n  easing: EasingFunction | EasingFunctionFactory\n): void {\n  'worklet';\n  if (_WORKLET) {\n    // If this is called on UI (for example from gesture handler with worklets), we don't get easing,\n    // but its bound copy, which is not a worklet. We don't want to throw any error then.\n    return;\n  }\n  if (SHOULD_BE_USE_WEB) {\n    // It is possible to run reanimated on web without plugin, so let's skip this check on web\n    return;\n  }\n  // @ts-ignore typescript wants us to use `in` instead, which doesn't work with host objects\n  if (easing?.factory) {\n    return;\n  }\n\n  if (!isWorkletFunction(easing)) {\n    throw new ReanimatedError(\n      'The easing function is not a worklet. Please make sure you import `Easing` from react-native-reanimated.'\n    );\n  }\n}\n\nexport function initialUpdaterRun<T>(updater: () => T) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\ninterface RecognizedPrefixSuffix {\n  prefix?: string;\n  suffix?: string;\n  strippedValue: number;\n}\n\nexport function recognizePrefixSuffix(\n  value: string | number\n): RecognizedPrefixSuffix {\n  'worklet';\n  if (typeof value === 'string') {\n    const match = value.match(\n      /([A-Za-z]*)(-?\\d*\\.?\\d*)([eE][-+]?[0-9]+)?([A-Za-z%]*)/\n    );\n    if (!match) {\n      throw new ReanimatedError(\"Couldn't parse animation value.\");\n    }\n    const prefix = match[1];\n    const suffix = match[4];\n    // number with scientific notation\n    const number = match[2] + (match[3] ?? '');\n    return { prefix, suffix, strippedValue: parseFloat(number) };\n  } else {\n    return { strippedValue: value };\n  }\n}\n\n/**\n * Returns whether the motion should be reduced for a specified config. By\n * default returns the system setting.\n */\nconst isReduceMotionOnUI = ReducedMotionManager.uiValue;\nexport function getReduceMotionFromConfig(config?: ReduceMotion) {\n  'worklet';\n  return !config || config === ReduceMotion.System\n    ? isReduceMotionOnUI.value\n    : config === ReduceMotion.Always;\n}\n\n/**\n * Returns the value that should be assigned to `animation.reduceMotion` for a\n * given config. If the config is not defined, `undefined` is returned.\n */\nexport function getReduceMotionForAnimation(config?: ReduceMotion) {\n  'worklet';\n  // if the config is not defined, we want `reduceMotion` to be undefined,\n  // so the parent animation knows if it should overwrite it\n  if (!config) {\n    return undefined;\n  }\n\n  return getReduceMotionFromConfig(config);\n}\n\nfunction applyProgressToMatrix(\n  progress: number,\n  a: AffineMatrix,\n  b: AffineMatrix\n) {\n  'worklet';\n  return addMatrices(a, scaleMatrix(subtractMatrices(b, a), progress));\n}\n\nfunction applyProgressToNumber(progress: number, a: number, b: number) {\n  'worklet';\n  return a + progress * (b - a);\n}\n\nfunction decorateAnimation<T extends AnimationObject | StyleLayoutAnimation>(\n  animation: T\n): void {\n  'worklet';\n  const baseOnStart = (animation as Animation<AnimationObject>).onStart;\n  const baseOnFrame = (animation as Animation<AnimationObject>).onFrame;\n\n  if ((animation as HigherOrderAnimation).isHigherOrder) {\n    animation.onStart = (\n      animation: Animation<AnimationObject>,\n      value: number,\n      timestamp: Timestamp,\n      previousAnimation: Animation<AnimationObject>\n    ) => {\n      if (animation.reduceMotion === undefined) {\n        animation.reduceMotion = getReduceMotionFromConfig();\n      }\n      return baseOnStart(animation, value, timestamp, previousAnimation);\n    };\n    return;\n  }\n\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: number,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    // recognize prefix, suffix, and updates stripped value on animation start\n    const { prefix, suffix, strippedValue } = recognizePrefixSuffix(value);\n    animation.__prefix = prefix;\n    animation.__suffix = suffix;\n    animation.strippedCurrent = strippedValue;\n    const { strippedValue: strippedToValue } = recognizePrefixSuffix(\n      animation.toValue as string | number\n    );\n    animation.current = strippedValue;\n    animation.startValue = strippedValue;\n    animation.toValue = strippedToValue;\n    if (previousAnimation && previousAnimation !== animation) {\n      const {\n        prefix: paPrefix,\n        suffix: paSuffix,\n        strippedValue: paStrippedValue,\n      } = recognizePrefixSuffix(previousAnimation.current as string | number);\n      previousAnimation.current = paStrippedValue;\n      previousAnimation.__prefix = paPrefix;\n      previousAnimation.__suffix = paSuffix;\n    }\n\n    baseOnStart(animation, strippedValue, timestamp, previousAnimation);\n\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n\n    if (previousAnimation && previousAnimation !== animation) {\n      previousAnimation.current =\n        (previousAnimation.__prefix ?? '') +\n        // FIXME\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        previousAnimation.current +\n        (previousAnimation.__suffix ?? '');\n    }\n  };\n  const prefNumberSuffOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: number\n  ) => {\n    animation.current = animation.strippedCurrent;\n    const res = baseOnFrame(animation, timestamp);\n    animation.strippedCurrent = animation.current;\n    animation.current =\n      (animation.__prefix ?? '') +\n      animation.current +\n      (animation.__suffix ?? '');\n    return res;\n  };\n\n  const tab = ['R', 'G', 'B', 'A'];\n  const colorOnStart = (\n    animation: Animation<AnimationObject>,\n    value: string | number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    let RGBAValue: ParsedColorArray;\n    let RGBACurrent: ParsedColorArray;\n    let RGBAToValue: ParsedColorArray;\n    const res: Array<number> = [];\n    if (isColor(value)) {\n      RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n      RGBAValue = toLinearSpace(convertToRGBA(value));\n      if (animation.toValue) {\n        RGBAToValue = toLinearSpace(convertToRGBA(animation.toValue));\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = RGBACurrent[index];\n      animation[i].toValue = RGBAToValue ? RGBAToValue[index] : undefined;\n      animation[i].onStart(\n        animation[i],\n        RGBAValue[index],\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n  };\n\n  const colorOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    const RGBACurrent = toLinearSpace(convertToRGBA(animation.current));\n    const res: Array<number> = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = RGBACurrent[index];\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      res.push(animation[i].current);\n    });\n\n    animation.current = rgbaArrayToRGBAColor(\n      toGammaSpace(res as ParsedColorArray)\n    );\n    return finished;\n  };\n\n  const transformationMatrixOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AffineMatrixFlat,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    const toValue = animation.toValue as AffineMatrixFlat;\n\n    animation.startMatrices = decomposeMatrixIntoMatricesAndAngles(value);\n    animation.stopMatrices = decomposeMatrixIntoMatricesAndAngles(toValue);\n\n    // We create an animation copy to animate single value between 0 and 100\n    // We set limits from 0 to 100 (instead of 0-1) to make spring look good\n    // with default thresholds.\n\n    animation[0] = Object.assign({}, animationCopy);\n    animation[0].current = 0;\n    animation[0].toValue = 100;\n    animation[0].onStart(\n      animation[0],\n      0,\n      timestamp,\n      previousAnimation ? previousAnimation[0] : undefined\n    );\n\n    animation.current = value;\n  };\n\n  const transformationMatrixOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const result = animation[0].onFrame(animation[0], timestamp);\n    // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n    finished = finished && result;\n\n    const progress = animation[0].current / 100;\n\n    const transforms = ['translationMatrix', 'scaleMatrix', 'skewMatrix'];\n    const mappedTransforms: Array<AffineMatrix> = [];\n\n    transforms.forEach((key, _) =>\n      mappedTransforms.push(\n        applyProgressToMatrix(\n          progress,\n          animation.startMatrices[key],\n          animation.stopMatrices[key]\n        )\n      )\n    );\n\n    const [currentTranslation, currentScale, skewMatrix] = mappedTransforms;\n\n    const rotations: Array<'x' | 'y' | 'z'> = ['x', 'y', 'z'];\n    const mappedRotations: Array<AffineMatrix> = [];\n\n    rotations.forEach((key, _) => {\n      const angle = applyProgressToNumber(\n        progress,\n        animation.startMatrices['r' + key],\n        animation.stopMatrices['r' + key]\n      );\n      mappedRotations.push(getRotationMatrix(angle, key));\n    });\n\n    const [rotationMatrixX, rotationMatrixY, rotationMatrixZ] = mappedRotations;\n\n    const rotationMatrix = multiplyMatrices(\n      rotationMatrixX,\n      multiplyMatrices(rotationMatrixY, rotationMatrixZ)\n    );\n\n    const updated = flatten(\n      multiplyMatrices(\n        multiplyMatrices(\n          currentScale,\n          multiplyMatrices(skewMatrix, rotationMatrix)\n        ),\n        currentTranslation\n      )\n    );\n\n    animation.current = updated;\n\n    return finished;\n  };\n\n  const arrayOnStart = (\n    animation: Animation<AnimationObject>,\n    value: Array<number>,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    value.forEach((v, i) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = v;\n      animation[i].toValue = (animation.toValue as Array<number>)[i];\n      animation[i].onStart(\n        animation[i],\n        v,\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n    });\n\n    animation.current = value;\n  };\n\n  const arrayOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    (animation.current as Array<number>).forEach((_, i) => {\n      const result = animation[i].onFrame(animation[i], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      (animation.current as Array<number>)[i] = animation[i].current;\n    });\n\n    return finished;\n  };\n\n  const objectOnStart = (\n    animation: Animation<AnimationObject>,\n    value: AnimatableValueObject,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ): void => {\n    for (const key in value) {\n      animation[key] = Object.assign({}, animationCopy);\n      animation[key].onStart = animation.onStart;\n\n      animation[key].current = value[key];\n      animation[key].toValue = (animation.toValue as AnimatableValueObject)[\n        key\n      ];\n      animation[key].onStart(\n        animation[key],\n        value[key],\n        timestamp,\n        previousAnimation ? previousAnimation[key] : undefined\n      );\n    }\n    animation.current = value;\n  };\n\n  const objectOnFrame = (\n    animation: Animation<AnimationObject>,\n    timestamp: Timestamp\n  ): boolean => {\n    let finished = true;\n    const newObject: AnimatableValueObject = {};\n    for (const key in animation.current as AnimatableValueObject) {\n      const result = animation[key].onFrame(animation[key], timestamp);\n      // We really need to assign this value to result, instead of passing it directly - otherwise once \"finished\" is false, onFrame won't be called\n      finished = finished && result;\n      newObject[key] = animation[key].current;\n    }\n    animation.current = newObject;\n    return finished;\n  };\n\n  animation.onStart = (\n    animation: Animation<AnimationObject>,\n    value: number,\n    timestamp: Timestamp,\n    previousAnimation: Animation<AnimationObject>\n  ) => {\n    if (animation.reduceMotion === undefined) {\n      animation.reduceMotion = getReduceMotionFromConfig();\n    }\n    if (animation.reduceMotion) {\n      if (animation.toValue !== undefined) {\n        animation.current = animation.toValue;\n      } else {\n        // if there is no `toValue`, then the base function is responsible for setting the current value\n        baseOnStart(animation, value, timestamp, previousAnimation);\n      }\n      animation.startTime = 0;\n      animation.onFrame = () => true;\n      return;\n    }\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (isAffineMatrixFlat(value)) {\n      transformationMatrixOnStart(\n        animation,\n        value,\n        timestamp,\n        previousAnimation\n      );\n      animation.onFrame = transformationMatrixOnFrame;\n      return;\n    } else if (Array.isArray(value)) {\n      arrayOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = arrayOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    } else if (typeof value === 'object' && value !== null) {\n      objectOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = objectOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\ntype AnimationToDecoration<\n  T extends AnimationObject | StyleLayoutAnimation,\n  U extends AnimationObject | StyleLayoutAnimation,\n> = T extends StyleLayoutAnimation\n  ? Record<string, unknown>\n  : U | (() => U) | AnimatableValue;\n\nexport function defineAnimation<\n  T extends AnimationObject | StyleLayoutAnimation, // type that's supposed to be returned\n  U extends AnimationObject | StyleLayoutAnimation = T, // type that's received\n>(starting: AnimationToDecoration<T, U>, factory: () => T): T {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting as unknown as T;\n  }\n  const create = () => {\n    'worklet';\n    const animation = factory();\n    decorateAnimation<U>(animation as unknown as U);\n    return animation;\n  };\n\n  if (_WORKLET || SHOULD_BE_USE_WEB) {\n    return create();\n  }\n  create.__isAnimationDefinition = true;\n\n  // @ts-expect-error it's fine\n  return create;\n}\n\n/**\n * Lets you cancel a running animation paired to a shared value.\n *\n * @param sharedValue - The shared value of a running animation that you want to\n *   cancel.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/cancelAnimation\n */\nexport function cancelAnimation<T>(sharedValue: SharedValue<T>): void {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}