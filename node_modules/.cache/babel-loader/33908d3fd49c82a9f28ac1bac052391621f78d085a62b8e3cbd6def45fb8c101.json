{"ast":null,"code":"'use strict';\n\nimport { useEffect } from 'react';\nimport { startMapper, stopMapper } from \"../core.js\";\nimport { useSharedValue } from \"./useSharedValue.js\";\nimport { shouldBeUseWeb } from \"../PlatformChecker.js\";\n\n/**\n * Lets you to respond to changes in a [shared\n * value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value).\n * It's especially useful when comparing values previously stored in the shared\n * value with the current one.\n *\n * @param prepare - A function that should return a value to which you'd like to\n *   react.\n * @param react - A function that reacts to changes in the value returned by the\n *   `prepare` function.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useAnimatedReaction\n */\n// @ts-expect-error This overload is required by our API.\n\nexport function useAnimatedReaction(prepare, react, dependencies) {\n  var _prepare$__closure;\n  const previous = useSharedValue(null);\n  let inputs = Object.values((_prepare$__closure = prepare.__closure) !== null && _prepare$__closure !== void 0 ? _prepare$__closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      // let web work without a Reanimated Babel plugin\n      inputs = dependencies;\n    }\n  }\n  if (dependencies === undefined) {\n    var _prepare$__closure2, _react$__closure;\n    dependencies = [...Object.values((_prepare$__closure2 = prepare.__closure) !== null && _prepare$__closure2 !== void 0 ? _prepare$__closure2 : {}), ...Object.values((_react$__closure = react.__closure) !== null && _react$__closure !== void 0 ? _react$__closure : {}), prepare.__workletHash, react.__workletHash];\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n\n      const input = prepare();\n      react(input, previous.value);\n      previous.value = input;\n    };\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}","map":{"version":3,"names":["useEffect","startMapper","stopMapper","useSharedValue","shouldBeUseWeb","useAnimatedReaction","prepare","react","dependencies","_prepare$__closure","previous","inputs","Object","values","__closure","_dependencies","length","undefined","_prepare$__closure2","_react$__closure","__workletHash","push","fun","input","value","mapperId"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/hook/useAnimatedReaction.ts"],"sourcesContent":["'use strict';\nimport { useEffect } from 'react';\nimport type { WorkletFunction } from '../commonTypes';\nimport { startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { useSharedValue } from './useSharedValue';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\n/**\n * Lets you to respond to changes in a [shared\n * value](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value).\n * It's especially useful when comparing values previously stored in the shared\n * value with the current one.\n *\n * @param prepare - A function that should return a value to which you'd like to\n *   react.\n * @param react - A function that reacts to changes in the value returned by the\n *   `prepare` function.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useAnimatedReaction\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: () => PreparedResult,\n  react: (prepared: PreparedResult, previous: PreparedResult | null) => void,\n  dependencies?: DependencyList\n): void;\n\nexport function useAnimatedReaction<PreparedResult>(\n  prepare: WorkletFunction<[], PreparedResult>,\n  react: WorkletFunction<\n    [prepare: PreparedResult, previous: PreparedResult | null],\n    void\n  >,\n  dependencies?: DependencyList\n) {\n  const previous = useSharedValue<PreparedResult | null>(null);\n\n  let inputs = Object.values(prepare.__closure ?? {});\n\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Reanimated Babel plugin\n      inputs = dependencies;\n    }\n  }\n\n  if (dependencies === undefined) {\n    dependencies = [\n      ...Object.values(prepare.__closure ?? {}),\n      ...Object.values(react.__closure ?? {}),\n      prepare.__workletHash,\n      react.__workletHash,\n    ];\n  } else {\n    dependencies.push(prepare.__workletHash, react.__workletHash);\n  }\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      const input = prepare();\n      react(input, previous.value);\n      previous.value = input;\n    };\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,WAAW,EAAEC,UAAU,QAAQ,YAAS;AAEjD,SAASC,cAAc,QAAQ,qBAAkB;AACjD,SAASC,cAAc,QAAQ,uBAAoB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAO,SAASC,mBAAmBA,CACjCC,OAA4C,EAC5CC,KAGC,EACDC,YAA6B,EAC7B;EAAA,IAAAC,kBAAA;EACA,MAAMC,QAAQ,GAAGP,cAAc,CAAwB,IAAI,CAAC;EAE5D,IAAIQ,MAAM,GAAGC,MAAM,CAACC,MAAM,EAAAJ,kBAAA,GAACH,OAAO,CAACQ,SAAS,cAAAL,kBAAA,cAAAA,kBAAA,GAAI,CAAC,CAAC,CAAC;EAEnD,IAAIL,cAAc,CAAC,CAAC,EAAE;IAAA,IAAAW,aAAA;IACpB,IAAI,CAACJ,MAAM,CAACK,MAAM,KAAAD,aAAA,GAAIP,YAAY,cAAAO,aAAA,eAAZA,aAAA,CAAcC,MAAM,EAAE;MAC1C;MACAL,MAAM,GAAGH,YAAY;IACvB;EACF;EAEA,IAAIA,YAAY,KAAKS,SAAS,EAAE;IAAA,IAAAC,mBAAA,EAAAC,gBAAA;IAC9BX,YAAY,GAAG,CACb,GAAGI,MAAM,CAACC,MAAM,EAAAK,mBAAA,GAACZ,OAAO,CAACQ,SAAS,cAAAI,mBAAA,cAAAA,mBAAA,GAAI,CAAC,CAAC,CAAC,EACzC,GAAGN,MAAM,CAACC,MAAM,EAAAM,gBAAA,GAACZ,KAAK,CAACO,SAAS,cAAAK,gBAAA,cAAAA,gBAAA,GAAI,CAAC,CAAC,CAAC,EACvCb,OAAO,CAACc,aAAa,EACrBb,KAAK,CAACa,aAAa,CACpB;EACH,CAAC,MAAM;IACLZ,YAAY,CAACa,IAAI,CAACf,OAAO,CAACc,aAAa,EAAEb,KAAK,CAACa,aAAa,CAAC;EAC/D;EAEApB,SAAS,CAAC,MAAM;IACd,MAAMsB,GAAG,GAAGA,CAAA,KAAM;MAChB,SAAS;;MACT,MAAMC,KAAK,GAAGjB,OAAO,CAAC,CAAC;MACvBC,KAAK,CAACgB,KAAK,EAAEb,QAAQ,CAACc,KAAK,CAAC;MAC5Bd,QAAQ,CAACc,KAAK,GAAGD,KAAK;IACxB,CAAC;IACD,MAAME,QAAQ,GAAGxB,WAAW,CAACqB,GAAG,EAAEX,MAAM,CAAC;IACzC,OAAO,MAAM;MACXT,UAAU,CAACuB,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAEjB,YAAY,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}