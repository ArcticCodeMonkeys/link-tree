{"ast":null,"code":"'use strict';\n\nimport { BaseAnimationBuilder } from \"../animationBuilder/index.js\";\nimport { withSequence, withTiming } from \"../../animation/index.js\";\nimport { FadeIn, FadeOut } from \"../defaultAnimations/Fade.js\";\nimport { logger } from \"../../logger/index.js\";\nexport class EntryExitTransition extends BaseAnimationBuilder {\n  static presetName = 'EntryExitTransition';\n  enteringV = FadeIn;\n  exitingV = FadeOut;\n  static createInstance() {\n    return new EntryExitTransition();\n  }\n  static entering(animation) {\n    const instance = this.createInstance();\n    return instance.entering(animation);\n  }\n  entering(animation) {\n    this.enteringV = animation;\n    return this;\n  }\n  static exiting(animation) {\n    const instance = this.createInstance();\n    return instance.exiting(animation);\n  }\n  exiting(animation) {\n    this.exitingV = animation;\n    return this;\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const enteringAnimation = this.enteringV.build();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const exitingAnimation = this.exitingV.build();\n    const exitingDuration = this.exitingV.getDuration();\n    return values => {\n      'worklet';\n\n      const enteringValues = enteringAnimation(values);\n      const exitingValues = exitingAnimation(values);\n      const animations = {\n        transform: []\n      };\n      for (const prop of Object.keys(exitingValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(exitingValues.animations.transform)) {\n            continue;\n          }\n          exitingValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              animations.transform.push({\n                [transformProp]: delayFunction(delay, withSequence(value[transformProp], withTiming(exitingValues.initialValues.transform ?\n                // TODO TYPESCRIPT\n                // @ts-ignore This line of code fails tragically\n                // in newer versions of React Native, where they have\n                // narrowed down the type of `transform` even further.\n                // Since this piece of code improperly typed anyway\n                // (e.g. it assumes types from RN Animated here) I'd rather\n                // fix it in the future when types for animations\n                // are properly defined.\n                exitingValues.initialValues.transform[index][transformProp] : 0, {\n                  duration: 0\n                })))\n              });\n            }\n          });\n        } else {\n          const sequence = enteringValues.animations[prop] !== undefined ? [exitingValues.animations[prop], withTiming(enteringValues.initialValues[prop], {\n            duration: 0\n          }), enteringValues.animations[prop]] : [exitingValues.animations[prop], withTiming(Object.keys(values).includes(prop) ? values[prop] : exitingValues.initialValues[prop], {\n            duration: 0\n          })];\n          animations[prop] = delayFunction(delay, withSequence(...sequence));\n        }\n      }\n      for (const prop of Object.keys(enteringValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(enteringValues.animations.transform)) {\n            continue;\n          }\n          enteringValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              animations.transform.push({\n                [transformProp]: delayFunction(delay + exitingDuration, withSequence(withTiming(enteringValues.initialValues.transform ? enteringValues.initialValues.transform[index][transformProp] : 0, {\n                  duration: exitingDuration\n                }), value[transformProp]))\n              });\n            }\n          });\n        } else if (animations[prop] !== undefined) {\n          // it was already added in the previous loop\n          continue;\n        } else {\n          animations[prop] = delayFunction(delay, withSequence(withTiming(enteringValues.initialValues[prop], {\n            duration: 0\n          }), enteringValues.animations[prop]));\n        }\n      }\n      const mergedTransform = (Array.isArray(exitingValues.initialValues.transform) ? exitingValues.initialValues.transform : []).concat((Array.isArray(enteringValues.animations.transform) ? enteringValues.animations.transform : []).map(value => {\n        const objectKeys = Object.keys(value);\n        if (objectKeys?.length < 1) {\n          logger.error(`\\${value} is not a valid Transform object`);\n          return value;\n        }\n        const transformProp = objectKeys[0];\n        const current =\n        // TODO TYPESCRIPT\n        // @ts-ignore Read similar comment above.\n        value[transformProp].current;\n        if (typeof current === 'string') {\n          if (current.includes('deg')) {\n            return {\n              [transformProp]: '0deg'\n            };\n          } else {\n            return {\n              [transformProp]: '0'\n            };\n          }\n        } else if (transformProp.includes('translate')) {\n          return {\n            [transformProp]: 0\n          };\n        } else {\n          return {\n            [transformProp]: 1\n          };\n        }\n      }));\n      return {\n        initialValues: {\n          ...exitingValues.initialValues,\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n          transform: mergedTransform\n        },\n        animations: {\n          originX: delayFunction(delay + exitingDuration, withTiming(values.targetOriginX, {\n            duration: exitingDuration\n          })),\n          originY: delayFunction(delay + exitingDuration, withTiming(values.targetOriginY, {\n            duration: exitingDuration\n          })),\n          width: delayFunction(delay + exitingDuration, withTiming(values.targetWidth, {\n            duration: exitingDuration\n          })),\n          height: delayFunction(delay + exitingDuration, withTiming(values.targetHeight, {\n            duration: exitingDuration\n          })),\n          ...animations\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * @deprecated Please use\n *   `EntryExitTransition.entering(entering).exiting(exiting)` instead.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions\n */\nexport function combineTransition(exiting, entering) {\n  return EntryExitTransition.entering(entering).exiting(exiting);\n}","map":{"version":3,"names":["BaseAnimationBuilder","withSequence","withTiming","FadeIn","FadeOut","logger","EntryExitTransition","presetName","enteringV","exitingV","createInstance","entering","animation","instance","exiting","build","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","enteringAnimation","exitingAnimation","exitingDuration","getDuration","values","enteringValues","exitingValues","animations","transform","prop","Object","keys","Array","isArray","forEach","value","index","transformProp","push","initialValues","duration","sequence","undefined","includes","mergedTransform","concat","map","objectKeys","length","error","current","originX","currentOriginX","originY","currentOriginY","width","currentWidth","height","currentHeight","targetOriginX","targetOriginY","targetWidth","targetHeight","combineTransition"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultTransitions/EntryExitTransition.ts"],"sourcesContent":["'use strict';\nimport type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationsValues,\n  LayoutAnimationFunction,\n  StylePropsWithArrayTransform,\n} from '../animationBuilder/commonTypes';\nimport { BaseAnimationBuilder } from '../animationBuilder';\nimport { withSequence, withTiming } from '../../animation';\nimport { FadeIn, FadeOut } from '../defaultAnimations/Fade';\nimport type {\n  AnimatableValue,\n  AnimationObject,\n  TransformArrayItem,\n} from '../../commonTypes';\nimport { logger } from '../../logger';\n\nexport class EntryExitTransition\n  extends BaseAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  static presetName = 'EntryExitTransition';\n\n  enteringV: BaseAnimationBuilder | typeof BaseAnimationBuilder = FadeIn;\n\n  exitingV: BaseAnimationBuilder | typeof BaseAnimationBuilder = FadeOut;\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new EntryExitTransition() as InstanceType<T>;\n  }\n\n  static entering(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    const instance = this.createInstance();\n    return instance.entering(animation);\n  }\n\n  entering(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    this.enteringV = animation;\n    return this;\n  }\n\n  static exiting(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    const instance = this.createInstance();\n    return instance.exiting(animation);\n  }\n\n  exiting(\n    animation: BaseAnimationBuilder | typeof BaseAnimationBuilder\n  ): EntryExitTransition {\n    this.exitingV = animation;\n    return this;\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const enteringAnimation = this.enteringV.build();\n    // @ts-ignore Calling `.build()` both static and instance methods works fine here, but `this` types are incompatible. They are not used though, so it's fine.\n    const exitingAnimation = this.exitingV.build();\n    const exitingDuration = this.exitingV.getDuration();\n\n    return (values) => {\n      'worklet';\n      const enteringValues = enteringAnimation(values);\n      const exitingValues = exitingAnimation(values);\n      const animations: StylePropsWithArrayTransform = {\n        transform: [],\n      };\n\n      for (const prop of Object.keys(exitingValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(exitingValues.animations.transform)) {\n            continue;\n          }\n          exitingValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              animations.transform!.push({\n                [transformProp]: delayFunction(\n                  delay,\n                  withSequence(\n                    value[transformProp as keyof TransformArrayItem],\n                    withTiming(\n                      exitingValues.initialValues.transform\n                        ? // TODO TYPESCRIPT\n                          // @ts-ignore This line of code fails tragically\n                          // in newer versions of React Native, where they have\n                          // narrowed down the type of `transform` even further.\n                          // Since this piece of code improperly typed anyway\n                          // (e.g. it assumes types from RN Animated here) I'd rather\n                          // fix it in the future when types for animations\n                          // are properly defined.\n                          exitingValues.initialValues.transform[index][\n                            transformProp\n                          ]\n                        : 0,\n                      { duration: 0 }\n                    )\n                  )\n                ),\n              } as TransformArrayItem);\n            }\n          });\n        } else {\n          const sequence =\n            enteringValues.animations[prop] !== undefined\n              ? [\n                  exitingValues.animations[prop],\n                  withTiming(enteringValues.initialValues[prop], {\n                    duration: 0,\n                  }),\n                  enteringValues.animations[prop],\n                ]\n              : [\n                  exitingValues.animations[prop],\n                  withTiming(\n                    Object.keys(values).includes(prop)\n                      ? values[prop as keyof LayoutAnimationsValues]\n                      : exitingValues.initialValues[prop],\n                    { duration: 0 }\n                  ),\n                ];\n\n          animations[prop] = delayFunction(delay, withSequence(...sequence));\n        }\n      }\n      for (const prop of Object.keys(enteringValues.animations)) {\n        if (prop === 'transform') {\n          if (!Array.isArray(enteringValues.animations.transform)) {\n            continue;\n          }\n          enteringValues.animations.transform.forEach((value, index) => {\n            for (const transformProp of Object.keys(value)) {\n              animations.transform!.push({\n                [transformProp]: delayFunction(\n                  delay + exitingDuration,\n                  withSequence(\n                    withTiming(\n                      enteringValues.initialValues.transform\n                        ? ((\n                            enteringValues.initialValues\n                              .transform as TransformArrayItem[]\n                          )[index][\n                            transformProp as keyof TransformArrayItem\n                          ] as AnimatableValue)\n                        : 0,\n                      { duration: exitingDuration }\n                    ),\n                    value[\n                      transformProp as keyof TransformArrayItem\n                    ] as AnimatableValue\n                  )\n                ),\n              } as TransformArrayItem);\n            }\n          });\n        } else if (animations[prop] !== undefined) {\n          // it was already added in the previous loop\n          continue;\n        } else {\n          animations[prop] = delayFunction(\n            delay,\n            withSequence(\n              withTiming(enteringValues.initialValues[prop], { duration: 0 }),\n              enteringValues.animations[prop]\n            )\n          );\n        }\n      }\n\n      const mergedTransform = (\n        Array.isArray(exitingValues.initialValues.transform)\n          ? exitingValues.initialValues.transform\n          : []\n      ).concat(\n        (Array.isArray(enteringValues.animations.transform)\n          ? enteringValues.animations.transform\n          : []\n        ).map((value) => {\n          const objectKeys = Object.keys(value);\n          if (objectKeys?.length < 1) {\n            logger.error(`\\${value} is not a valid Transform object`);\n            return value;\n          }\n\n          const transformProp = objectKeys[0];\n          const current =\n            // TODO TYPESCRIPT\n            // @ts-ignore Read similar comment above.\n            (value[transformProp] as AnimationObject).current;\n          if (typeof current === 'string') {\n            if (current.includes('deg')) {\n              return {\n                [transformProp]: '0deg',\n              } as unknown as TransformArrayItem;\n            } else {\n              return {\n                [transformProp]: '0',\n              } as unknown as TransformArrayItem;\n            }\n          } else if (transformProp.includes('translate')) {\n            return { [transformProp]: 0 } as unknown as TransformArrayItem;\n          } else {\n            return { [transformProp]: 1 } as unknown as TransformArrayItem;\n          }\n        })\n      );\n\n      return {\n        initialValues: {\n          ...exitingValues.initialValues,\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n          transform: mergedTransform,\n        },\n        animations: {\n          originX: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetOriginX, { duration: exitingDuration })\n          ),\n          originY: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetOriginY, { duration: exitingDuration })\n          ),\n          width: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetWidth, { duration: exitingDuration })\n          ),\n          height: delayFunction(\n            delay + exitingDuration,\n            withTiming(values.targetHeight, { duration: exitingDuration })\n          ),\n          ...animations,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * @deprecated Please use\n *   `EntryExitTransition.entering(entering).exiting(exiting)` instead.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions\n */\nexport function combineTransition(\n  exiting: BaseAnimationBuilder | typeof BaseAnimationBuilder,\n  entering: BaseAnimationBuilder | typeof BaseAnimationBuilder\n): EntryExitTransition {\n  return EntryExitTransition.entering(entering).exiting(exiting);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}