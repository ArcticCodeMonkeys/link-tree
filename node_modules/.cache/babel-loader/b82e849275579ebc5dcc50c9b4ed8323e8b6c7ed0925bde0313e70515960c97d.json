{"ast":null,"code":"'use strict';\n\nimport { ComplexAnimationBuilder } from \"../animationBuilder/index.js\";\n/**\n * Entry with change in rotation, scale, and opacity. You can modify the\n * behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelIn extends ComplexAnimationBuilder {\n  static presetName = 'PinwheelIn';\n  static createInstance() {\n    return new PinwheelIn();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [{\n            scale: delayFunction(delay, animation(1, config))\n          }, {\n            rotate: delayFunction(delay, animation('0', config))\n          }]\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{\n            scale: 0\n          }, {\n            rotate: '5'\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Exit with change in rotation, scale, and opacity. You can modify the behavior\n * by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelOut extends ComplexAnimationBuilder {\n  static presetName = 'PinwheelOut';\n  static createInstance() {\n    return new PinwheelOut();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [{\n            scale: delayFunction(delay, animation(0, config))\n          }, {\n            rotate: delayFunction(delay, animation('5', config))\n          }]\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{\n            scale: 1\n          }, {\n            rotate: '0'\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}","map":{"version":3,"names":["ComplexAnimationBuilder","PinwheelIn","presetName","createInstance","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","initialValues","animations","opacity","transform","scale","rotate","PinwheelOut"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultAnimations/Pinwheel.ts"],"sourcesContent":["'use strict';\nimport type { BaseAnimationBuilder } from '../animationBuilder';\nimport { ComplexAnimationBuilder } from '../animationBuilder';\nimport type {\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n} from '../animationBuilder/commonTypes';\n\n/**\n * Entry with change in rotation, scale, and opacity. You can modify the\n * behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelIn\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'PinwheelIn';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new PinwheelIn() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            {\n              scale: delayFunction(delay, animation(1, config)),\n            },\n            {\n              rotate: delayFunction(delay, animation('0', config)),\n            },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [\n            {\n              scale: 0,\n            },\n            {\n              rotate: '5',\n            },\n          ],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Exit with change in rotation, scale, and opacity. You can modify the behavior\n * by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelOut\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'PinwheelOut';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new PinwheelOut() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            {\n              scale: delayFunction(delay, animation(0, config)),\n            },\n            {\n              rotate: delayFunction(delay, animation('5', config)),\n            },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [\n            {\n              scale: 1,\n            },\n            {\n              rotate: '0',\n            },\n          ],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,uBAAuB,QAAQ,8BAAqB;AAM7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,SACbD,uBAAuB,CAEjC;EACE,OAAOE,UAAU,GAAG,YAAY;EAEhC,OAAOC,cAAcA,CAAA,EAEF;IACjB,OAAO,IAAIF,UAAU,CAAC,CAAC;EACzB;EAEAG,KAAK,GAAGA,CAAA,KAAkC;IACxC,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC7C,MAAM,CAACC,SAAS,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;IACxD,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;IAC/B,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IAExC,OAAO,MAAM;MACX,SAAS;;MACT,OAAO;QACLC,UAAU,EAAE;UACVC,OAAO,EAAEX,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;UACnDS,SAAS,EAAE,CACT;YACEC,KAAK,EAAEb,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC;UAClD,CAAC,EACD;YACEW,MAAM,EAAEd,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,GAAG,EAAEC,MAAM,CAAC;UACrD,CAAC;QAEL,CAAC;QACDM,aAAa,EAAE;UACbE,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,CACT;YACEC,KAAK,EAAE;UACT,CAAC,EACD;YACEC,MAAM,EAAE;UACV,CAAC,CACF;UACD,GAAGL;QACL,CAAC;QACDF;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,WAAW,SACdpB,uBAAuB,CAEjC;EACE,OAAOE,UAAU,GAAG,aAAa;EAEjC,OAAOC,cAAcA,CAAA,EAEF;IACjB,OAAO,IAAIiB,WAAW,CAAC,CAAC;EAC1B;EAEAhB,KAAK,GAAGA,CAAA,KAAkC;IACxC,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;IAC7C,MAAM,CAACC,SAAS,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,qBAAqB,CAAC,CAAC;IACxD,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC7B,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;IAC/B,MAAMC,aAAa,GAAG,IAAI,CAACA,aAAa;IAExC,OAAO,MAAM;MACX,SAAS;;MACT,OAAO;QACLC,UAAU,EAAE;UACVC,OAAO,EAAEX,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;UACnDS,SAAS,EAAE,CACT;YACEC,KAAK,EAAEb,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,CAAC,EAAEC,MAAM,CAAC;UAClD,CAAC,EACD;YACEW,MAAM,EAAEd,aAAa,CAACK,KAAK,EAAEH,SAAS,CAAC,GAAG,EAAEC,MAAM,CAAC;UACrD,CAAC;QAEL,CAAC;QACDM,aAAa,EAAE;UACbE,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,CACT;YACEC,KAAK,EAAE;UACT,CAAC,EACD;YACEC,MAAM,EAAE;UACV,CAAC,CACF;UACD,GAAGL;QACL,CAAC;QACDF;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}