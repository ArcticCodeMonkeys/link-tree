{"ast":null,"code":"'use strict';\n\nimport { defineAnimation, getReduceMotionForAnimation, recognizePrefixSuffix } from \"./util.js\";\nimport { logger } from \"../logger/index.js\";\nexport const withClamp = function (config, _animationToClamp) {\n  'worklet';\n\n  return defineAnimation(_animationToClamp, () => {\n    'worklet';\n\n    const animationToClamp = typeof _animationToClamp === 'function' ? _animationToClamp() : _animationToClamp;\n    const strippedMin = config.min === undefined ? undefined : recognizePrefixSuffix(config.min).strippedValue;\n    const strippedMax = config.max === undefined ? undefined : recognizePrefixSuffix(config.max).strippedValue;\n    function clampOnFrame(animation, now) {\n      const finished = animationToClamp.onFrame(animationToClamp, now);\n      if (animationToClamp.current === undefined) {\n        logger.warn(\"Error inside 'withClamp' animation, the inner animation has invalid current value\");\n        return true;\n      } else {\n        const {\n          prefix,\n          strippedValue,\n          suffix\n        } = recognizePrefixSuffix(animationToClamp.current);\n        let newValue;\n        if (strippedMax !== undefined && strippedMax < strippedValue) {\n          newValue = strippedMax;\n        } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n          newValue = strippedMin;\n        } else {\n          newValue = strippedValue;\n        }\n        animation.current = typeof animationToClamp.current === 'number' ? newValue : `${prefix === undefined ? '' : prefix}${newValue}${suffix === undefined ? '' : suffix}`;\n      }\n      return finished;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      animation.previousAnimation = animationToClamp;\n      const animationBeforeClamped = previousAnimation?.previousAnimation;\n      if (config.max !== undefined && config.min !== undefined && config.max < config.min) {\n        logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');\n      }\n      animationToClamp.onStart(animationToClamp,\n      /**\n       * Provide the current value of the previous animation of the clamped\n       * animation so we can animate from the original \"un-truncated\" value\n       */\n      animationBeforeClamped?.current || value, now, animationBeforeClamped);\n    }\n    const callback = finished => {\n      if (animationToClamp.callback) {\n        animationToClamp.callback(finished);\n      }\n    };\n    return {\n      isHigherOrder: true,\n      onFrame: clampOnFrame,\n      onStart,\n      current: animationToClamp.current,\n      callback,\n      previousAnimation: null,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","recognizePrefixSuffix","logger","withClamp","config","_animationToClamp","animationToClamp","strippedMin","min","undefined","strippedValue","strippedMax","max","clampOnFrame","animation","now","finished","onFrame","current","warn","prefix","suffix","newValue","onStart","value","previousAnimation","animationBeforeClamped","callback","isHigherOrder","reduceMotion"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/animation/clamp.ts"],"sourcesContent":["'use strict';\nimport {\n  defineAnimation,\n  getReduceMotionForAnimation,\n  recognizePrefixSuffix,\n} from './util';\nimport type {\n  Animation,\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  ReduceMotion,\n} from '../commonTypes';\nimport type { ClampAnimation } from './commonTypes';\nimport { logger } from '../logger';\n\ntype withClampType = <T extends number | string>(\n  config: {\n    min?: T;\n    max?: T;\n  },\n  clampedAnimation: T\n) => T;\n\nexport const withClamp = function <T extends number | string>(\n  config: { min?: T; max?: T; reduceMotion?: ReduceMotion },\n  _animationToClamp: AnimationObject<T> | (() => AnimationObject<T>)\n): Animation<ClampAnimation> {\n  'worklet';\n  return defineAnimation<ClampAnimation, AnimationObject<T>>(\n    _animationToClamp,\n    (): ClampAnimation => {\n      'worklet';\n      const animationToClamp =\n        typeof _animationToClamp === 'function'\n          ? _animationToClamp()\n          : _animationToClamp;\n\n      const strippedMin =\n        config.min === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.min).strippedValue;\n\n      const strippedMax =\n        config.max === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.max).strippedValue;\n\n      function clampOnFrame(\n        animation: ClampAnimation,\n        now: Timestamp\n      ): boolean {\n        const finished = animationToClamp.onFrame(animationToClamp, now);\n\n        if (animationToClamp.current === undefined) {\n          logger.warn(\n            \"Error inside 'withClamp' animation, the inner animation has invalid current value\"\n          );\n          return true;\n        } else {\n          const { prefix, strippedValue, suffix } = recognizePrefixSuffix(\n            animationToClamp.current\n          );\n\n          let newValue;\n\n          if (strippedMax !== undefined && strippedMax < strippedValue) {\n            newValue = strippedMax;\n          } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n            newValue = strippedMin;\n          } else {\n            newValue = strippedValue;\n          }\n\n          animation.current =\n            typeof animationToClamp.current === 'number'\n              ? newValue\n              : `${prefix === undefined ? '' : prefix}${newValue}${\n                  suffix === undefined ? '' : suffix\n                }`;\n        }\n\n        return finished;\n      }\n\n      function onStart(\n        animation: Animation<any>,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: Animation<any> | null\n      ): void {\n        animation.current = value;\n        animation.previousAnimation = animationToClamp;\n        const animationBeforeClamped = previousAnimation?.previousAnimation;\n        if (\n          config.max !== undefined &&\n          config.min !== undefined &&\n          config.max < config.min\n        ) {\n          logger.warn(\n            'Wrong config was provided to withClamp. Min value is bigger than max'\n          );\n        }\n\n        animationToClamp.onStart(\n          animationToClamp,\n          /**\n           * Provide the current value of the previous animation of the clamped\n           * animation so we can animate from the original \"un-truncated\" value\n           */\n          animationBeforeClamped?.current || value,\n          now,\n          animationBeforeClamped\n        );\n      }\n\n      const callback = (finished?: boolean): void => {\n        if (animationToClamp.callback) {\n          animationToClamp.callback(finished);\n        }\n      };\n\n      return {\n        isHigherOrder: true,\n        onFrame: clampOnFrame,\n        onStart,\n        current: animationToClamp.current!,\n        callback,\n        previousAnimation: null,\n        reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n      };\n    }\n  );\n} as withClampType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}