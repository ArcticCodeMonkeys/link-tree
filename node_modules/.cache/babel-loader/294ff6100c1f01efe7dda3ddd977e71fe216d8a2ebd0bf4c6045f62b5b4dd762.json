{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Easing } from \"../../Easing.js\";\nimport { withDelay, withSequence, withTiming } from \"../../animation/index.js\";\nimport { ReduceMotion } from \"../../commonTypes.js\";\nimport { assertEasingIsWorklet, getReduceMotionFromConfig } from \"../../animation/util.js\";\nimport { ReanimatedError } from \"../../errors.js\";\nclass InnerKeyframe {\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions) {\n    _defineProperty(this, \"reduceMotionV\", ReduceMotion.System);\n    _defineProperty(this, \"build\", () => {\n      const delay = this.delayV;\n      const delayFunction = this.getDelayFunction();\n      const {\n        keyframes,\n        initialValues\n      } = this.parseDefinitions();\n      const callback = this.callbackV;\n      return () => {\n        'worklet';\n\n        const animations = {};\n\n        /* \n              For each style property, an animations sequence is created that corresponds with its key points.\n              Transform style properties require special handling because of their nested structure.\n        */\n        const addAnimation = key => {\n          const keyframePoints = keyframes[key];\n          // in case if property was only passed as initial value\n          if (keyframePoints.length === 0) {\n            return;\n          }\n          const animation = delayFunction(delay, keyframePoints.length === 1 ? withTiming(keyframePoints[0].value, {\n            duration: keyframePoints[0].duration,\n            easing: keyframePoints[0].easing ? keyframePoints[0].easing : Easing.linear\n          }) : withSequence(...keyframePoints.map(keyframePoint => withTiming(keyframePoint.value, {\n            duration: keyframePoint.duration,\n            easing: keyframePoint.easing ? keyframePoint.easing : Easing.linear\n          }))));\n          if (key.includes('transform')) {\n            if (!('transform' in animations)) {\n              animations.transform = [];\n            }\n            animations.transform.push({\n              [key.split(':')[1]]: animation\n            });\n          } else {\n            animations[key] = animation;\n          }\n        };\n        Object.keys(initialValues).forEach(key => {\n          if (key.includes('transform')) {\n            initialValues[key].forEach((transformProp, index) => {\n              Object.keys(transformProp).forEach(transformPropKey => {\n                addAnimation(makeKeyframeKey(index, transformPropKey));\n              });\n            });\n          } else {\n            addAnimation(key);\n          }\n        });\n        return {\n          animations,\n          initialValues,\n          callback\n        };\n      };\n    });\n    this.definitions = definitions;\n  }\n  parseDefinitions() {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw new ReanimatedError(\"You cannot provide both keyframe 0 and 'from' as they both specified initial values.\");\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw new ReanimatedError(\"You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\");\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n      One of the assumptions is that keyframe  0 is required to properly set initial values.\n      Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw new ReanimatedError(\"Please provide 0 or 'from' keyframe with initial state of your object.\");\n    }\n    const initialValues = this.definitions['0'];\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach(styleProp => {\n      if (styleProp === 'transform') {\n        if (!Array.isArray(initialValues.transform)) {\n          return;\n        }\n        initialValues.transform.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach(transformProp => {\n            parsedKeyframes[makeKeyframeKey(index, transformProp)] = [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n    const duration = this.durationV ? this.durationV : 500;\n    const animationKeyPoints = Array.from(Object.keys(this.definitions)).map(Number);\n    const getAnimationDuration = (key, currentKeyPoint) => {\n      const maxDuration = currentKeyPoint / 100 * duration;\n      const currentDuration = parsedKeyframes[key].reduce((acc, value) => acc + value.duration, 0);\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = _ref => {\n      let {\n        key,\n        value,\n        currentKeyPoint,\n        easing\n      } = _ref;\n      if (!(key in parsedKeyframes)) {\n        throw new ReanimatedError(\"Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\");\n      }\n      if (__DEV__ && easing) {\n        assertEasingIsWorklet(easing);\n      }\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value,\n        easing\n      });\n    };\n    animationKeyPoints.filter(value => value !== 0).sort((a, b) => a - b).forEach(keyPoint => {\n      if (keyPoint < 0 || keyPoint > 100) {\n        throw new ReanimatedError('Keyframe should be in between range 0 - 100.');\n      }\n      const keyframe = this.definitions[keyPoint];\n      const easing = keyframe.easing;\n      delete keyframe.easing;\n      const addKeyPointWith = (key, value) => addKeyPoint({\n        key,\n        value,\n        currentKeyPoint: keyPoint,\n        easing\n      });\n      Object.keys(keyframe).forEach(key => {\n        if (key === 'transform') {\n          if (!Array.isArray(keyframe.transform)) {\n            return;\n          }\n          keyframe.transform.forEach((transformStyle, index) => {\n            Object.keys(transformStyle).forEach(transformProp => {\n              addKeyPointWith(makeKeyframeKey(index, transformProp), transformStyle[transformProp] // Here we assume that user has passed props of proper type.\n              // I don't think it's worthwhile to check if he passed i.e. `Animated.Node`.\n              );\n            });\n          });\n        } else {\n          addKeyPointWith(key, keyframe[key]);\n        }\n      });\n    });\n    return {\n      initialValues,\n      keyframes: parsedKeyframes\n    };\n  }\n  duration(durationMs) {\n    this.durationV = durationMs;\n    return this;\n  }\n  delay(delayMs) {\n    this.delayV = delayMs;\n    return this;\n  }\n  withCallback(callback) {\n    this.callbackV = callback;\n    return this;\n  }\n  reduceMotion(reduceMotionV) {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n  getDelayFunction() {\n    const delay = this.delayV;\n    const reduceMotion = this.reduceMotionV;\n    return delay ?\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    (delay, animation) => {\n      'worklet';\n\n      return withDelay(delay, animation, reduceMotion);\n    } : (_, animation) => {\n      'worklet';\n\n      animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n      return animation;\n    };\n  }\n}\nfunction makeKeyframeKey(index, transformProp) {\n  'worklet';\n\n  return \"\".concat(index, \"_transform:\").concat(transformProp);\n}\nexport const Keyframe = InnerKeyframe;","map":{"version":3,"names":["_defineProperty","Easing","withDelay","withSequence","withTiming","ReduceMotion","assertEasingIsWorklet","getReduceMotionFromConfig","ReanimatedError","InnerKeyframe","constructor","definitions","System","delay","delayV","delayFunction","getDelayFunction","keyframes","initialValues","parseDefinitions","callback","callbackV","animations","addAnimation","key","keyframePoints","length","animation","value","duration","easing","linear","map","keyframePoint","includes","transform","push","split","Object","keys","forEach","transformProp","index","transformPropKey","makeKeyframeKey","parsedKeyframes","from","to","styleProp","Array","isArray","transformStyle","durationV","animationKeyPoints","Number","getAnimationDuration","currentKeyPoint","maxDuration","currentDuration","reduce","acc","addKeyPoint","_ref","__DEV__","filter","sort","a","b","keyPoint","keyframe","addKeyPointWith","durationMs","delayMs","withCallback","reduceMotion","reduceMotionV","_","concat","Keyframe"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/animationBuilder/Keyframe.ts"],"sourcesContent":["'use strict';\nimport { Easing } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport type {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n  MaybeInvalidKeyframeProps,\n  StylePropsWithArrayTransform,\n  ValidKeyframeProps,\n} from './commonTypes';\nimport type {\n  StyleProps,\n  EasingFunction,\n  TransformArrayItem,\n} from '../../commonTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport {\n  assertEasingIsWorklet,\n  getReduceMotionFromConfig,\n} from '../../animation/util';\nimport { ReanimatedError } from '../../errors';\n\ninterface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFunction;\n}\ninterface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\n\nclass InnerKeyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  callbackV?: (finished: boolean) => void;\n  definitions: MaybeInvalidKeyframeProps;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: ValidKeyframeProps) {\n    this.definitions = definitions as MaybeInvalidKeyframeProps;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw new ReanimatedError(\n          \"You cannot provide both keyframe 0 and 'from' as they both specified initial values.\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw new ReanimatedError(\n          \"You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n      One of the assumptions is that keyframe  0 is required to properly set initial values.\n      Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw new ReanimatedError(\n        \"Please provide 0 or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        if (!Array.isArray(initialValues.transform)) {\n          return;\n        }\n        initialValues.transform.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[makeKeyframeKey(index, transformProp)] = [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<number> = Array.from(\n      Object.keys(this.definitions)\n    ).map(Number);\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFunction;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw new ReanimatedError(\n          \"Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n\n      if (__DEV__ && easing) {\n        assertEasingIsWorklet(easing);\n      }\n\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value,\n        easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: number) => value !== 0)\n      .sort((a: number, b: number) => a - b)\n      .forEach((keyPoint: number) => {\n        if (keyPoint < 0 || keyPoint > 100) {\n          throw new ReanimatedError(\n            'Keyframe should be in between range 0 - 100.'\n          );\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: keyPoint,\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            if (!Array.isArray(keyframe.transform)) {\n              return;\n            }\n            keyframe.transform.forEach((transformStyle, index) => {\n              Object.keys(transformStyle).forEach((transformProp: string) => {\n                addKeyPointWith(\n                  makeKeyframeKey(index, transformProp),\n                  transformStyle[\n                    transformProp as keyof typeof transformStyle\n                  ] as number | string // Here we assume that user has passed props of proper type.\n                  // I don't think it's worthwhile to check if he passed i.e. `Animated.Node`.\n                );\n              });\n            });\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): InnerKeyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): InnerKeyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): InnerKeyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    const reduceMotion = this.reduceMotionV;\n    return delay\n      ? // eslint-disable-next-line @typescript-eslint/no-shadow\n        (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return () => {\n      'worklet';\n      const animations: StylePropsWithArrayTransform = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) {\n          return;\n        }\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence(\n                ...keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          animations.transform!.push(<TransformArrayItem>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(makeKeyframeKey(index, transformPropKey));\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations,\n        initialValues,\n        callback,\n      };\n    };\n  };\n}\n\nfunction makeKeyframeKey(index: number, transformProp: string) {\n  'worklet';\n  return `${index}_transform:${transformProp}`;\n}\n\nexport declare class ReanimatedKeyframe {\n  constructor(definitions: ValidKeyframeProps);\n  duration(durationMs: number): ReanimatedKeyframe;\n  delay(delayMs: number): ReanimatedKeyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): ReanimatedKeyframe;\n  withCallback(callback: (finished: boolean) => void): ReanimatedKeyframe;\n}\n\nexport const Keyframe = InnerKeyframe as typeof ReanimatedKeyframe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}