{"ast":null,"code":"'use strict';\n\nimport _objectSpread from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { withSequence, withTiming } from \"../../animation/index.js\";\nimport { Easing } from \"../../Easing.js\";\nimport { BaseAnimationBuilder } from \"../animationBuilder/index.js\";\n\n/**\n * Layout jumps - quite literally - from one position to another. You can modify\n * the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `layout` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions#jumping-transition\n */\nexport class JumpingTransition extends BaseAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      var _this$durationV;\n      const delayFunction = this.getDelayFunction();\n      const callback = this.callbackV;\n      const delay = this.getDelay();\n      const duration = (_this$durationV = this.durationV) !== null && _this$durationV !== void 0 ? _this$durationV : 300;\n      const halfDuration = duration / 2;\n      const config = {\n        duration\n      };\n      return values => {\n        'worklet';\n\n        const d = Math.max(Math.abs(values.targetOriginX - values.currentOriginX), Math.abs(values.targetOriginY - values.currentOriginY));\n        return {\n          initialValues: {\n            originX: values.currentOriginX,\n            originY: values.currentOriginY,\n            width: values.currentWidth,\n            height: values.currentHeight\n          },\n          animations: {\n            originX: delayFunction(delay, withTiming(values.targetOriginX, config)),\n            originY: delayFunction(delay, withSequence(withTiming(Math.min(values.targetOriginY, values.currentOriginY) - d, {\n              duration: halfDuration,\n              easing: Easing.out(Easing.exp)\n            }), withTiming(values.targetOriginY, _objectSpread(_objectSpread({}, config), {}, {\n              duration: halfDuration,\n              easing: Easing.bounce\n            })))),\n            width: delayFunction(delay, withTiming(values.targetWidth, config)),\n            height: delayFunction(delay, withTiming(values.targetHeight, config))\n          },\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new JumpingTransition();\n  }\n}\n_defineProperty(JumpingTransition, \"presetName\", 'JumpingTransition');","map":{"version":3,"names":["_objectSpread","_defineProperty","withSequence","withTiming","Easing","BaseAnimationBuilder","JumpingTransition","constructor","arguments","_this$durationV","delayFunction","getDelayFunction","callback","callbackV","delay","getDelay","duration","durationV","halfDuration","config","values","d","Math","max","abs","targetOriginX","currentOriginX","targetOriginY","currentOriginY","initialValues","originX","originY","width","currentWidth","height","currentHeight","animations","min","easing","out","exp","bounce","targetWidth","targetHeight","createInstance"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultTransitions/JumpingTransition.ts"],"sourcesContent":["'use strict';\nimport type {\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n} from '../animationBuilder/commonTypes';\nimport { withSequence, withTiming } from '../../animation';\nimport { Easing } from '../../Easing';\nimport { BaseAnimationBuilder } from '../animationBuilder';\n\n/**\n * Layout jumps - quite literally - from one position to another. You can modify\n * the behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `layout` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-transitions#jumping-transition\n */\nexport class JumpingTransition\n  extends BaseAnimationBuilder\n  implements ILayoutAnimationBuilder\n{\n  static presetName = 'JumpingTransition';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new JumpingTransition() as InstanceType<T>;\n  }\n\n  build = (): LayoutAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const callback = this.callbackV;\n    const delay = this.getDelay();\n    const duration = this.durationV ?? 300;\n    const halfDuration = duration / 2;\n    const config = { duration };\n\n    return (values) => {\n      'worklet';\n      const d = Math.max(\n        Math.abs(values.targetOriginX - values.currentOriginX),\n        Math.abs(values.targetOriginY - values.currentOriginY)\n      );\n      return {\n        initialValues: {\n          originX: values.currentOriginX,\n          originY: values.currentOriginY,\n          width: values.currentWidth,\n          height: values.currentHeight,\n        },\n        animations: {\n          originX: delayFunction(\n            delay,\n            withTiming(values.targetOriginX, config)\n          ),\n          originY: delayFunction(\n            delay,\n            withSequence(\n              withTiming(\n                Math.min(values.targetOriginY, values.currentOriginY) - d,\n                {\n                  duration: halfDuration,\n                  easing: Easing.out(Easing.exp),\n                }\n              ),\n              withTiming(values.targetOriginY, {\n                ...config,\n                duration: halfDuration,\n                easing: Easing.bounce,\n              })\n            )\n          ),\n          width: delayFunction(delay, withTiming(values.targetWidth, config)),\n          height: delayFunction(delay, withTiming(values.targetHeight, config)),\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,aAAA;AAAA,OAAAC,eAAA;AAKZ,SAASC,YAAY,EAAEC,UAAU,QAAQ,0BAAiB;AAC1D,SAASC,MAAM,QAAQ,iBAAc;AACrC,SAASC,oBAAoB,QAAQ,8BAAqB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,SACpBD,oBAAoB,CAE9B;EAAAE,YAAA;IAAA,SAAAC,SAAA;IAAAP,eAAA,gBASU,MAA+B;MAAA,IAAAQ,eAAA;MACrC,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC;MAC7C,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS;MAC/B,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;MAC7B,MAAMC,QAAQ,IAAAP,eAAA,GAAG,IAAI,CAACQ,SAAS,cAAAR,eAAA,cAAAA,eAAA,GAAI,GAAG;MACtC,MAAMS,YAAY,GAAGF,QAAQ,GAAG,CAAC;MACjC,MAAMG,MAAM,GAAG;QAAEH;MAAS,CAAC;MAE3B,OAAQI,MAAM,IAAK;QACjB,SAAS;;QACT,MAAMC,CAAC,GAAGC,IAAI,CAACC,GAAG,CAChBD,IAAI,CAACE,GAAG,CAACJ,MAAM,CAACK,aAAa,GAAGL,MAAM,CAACM,cAAc,CAAC,EACtDJ,IAAI,CAACE,GAAG,CAACJ,MAAM,CAACO,aAAa,GAAGP,MAAM,CAACQ,cAAc,CACvD,CAAC;QACD,OAAO;UACLC,aAAa,EAAE;YACbC,OAAO,EAAEV,MAAM,CAACM,cAAc;YAC9BK,OAAO,EAAEX,MAAM,CAACQ,cAAc;YAC9BI,KAAK,EAAEZ,MAAM,CAACa,YAAY;YAC1BC,MAAM,EAAEd,MAAM,CAACe;UACjB,CAAC;UACDC,UAAU,EAAE;YACVN,OAAO,EAAEpB,aAAa,CACpBI,KAAK,EACLX,UAAU,CAACiB,MAAM,CAACK,aAAa,EAAEN,MAAM,CACzC,CAAC;YACDY,OAAO,EAAErB,aAAa,CACpBI,KAAK,EACLZ,YAAY,CACVC,UAAU,CACRmB,IAAI,CAACe,GAAG,CAACjB,MAAM,CAACO,aAAa,EAAEP,MAAM,CAACQ,cAAc,CAAC,GAAGP,CAAC,EACzD;cACEL,QAAQ,EAAEE,YAAY;cACtBoB,MAAM,EAAElC,MAAM,CAACmC,GAAG,CAACnC,MAAM,CAACoC,GAAG;YAC/B,CACF,CAAC,EACDrC,UAAU,CAACiB,MAAM,CAACO,aAAa,EAAA3B,aAAA,CAAAA,aAAA,KAC1BmB,MAAM;cACTH,QAAQ,EAAEE,YAAY;cACtBoB,MAAM,EAAElC,MAAM,CAACqC;YAAA,EAChB,CACH,CACF,CAAC;YACDT,KAAK,EAAEtB,aAAa,CAACI,KAAK,EAAEX,UAAU,CAACiB,MAAM,CAACsB,WAAW,EAAEvB,MAAM,CAAC,CAAC;YACnEe,MAAM,EAAExB,aAAa,CAACI,KAAK,EAAEX,UAAU,CAACiB,MAAM,CAACuB,YAAY,EAAExB,MAAM,CAAC;UACtE,CAAC;UACDP;QACF,CAAC;MACH,CAAC;IACH,CAAC;EAAA;EAvDD,OAAOgC,cAAcA,CAAA,EAEF;IACjB,OAAO,IAAItC,iBAAiB,CAAC,CAAC;EAChC;AAoDF;AAAAL,eAAA,CA9DaK,iBAAiB,gBAIR,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}