{"ast":null,"code":"'use strict';\n\nimport _objectSpread from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isSharedValue } from \"../isSharedValue.js\";\nimport { isChromeDebugger } from \"../PlatformChecker.js\";\nimport { WorkletEventHandler } from \"../WorkletEventHandler.js\";\nimport { initialUpdaterRun } from \"../animation/index.js\";\nimport { hasInlineStyles, getInlineStyle } from \"./InlinePropManager.js\";\nimport { flattenArray, has } from \"./utils.js\";\nimport { StyleSheet } from 'react-native';\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\nexport class PropsFilter {\n  constructor() {\n    _defineProperty(this, \"_initialStyle\", {});\n  }\n  filterNonAnimatedProps(component) {\n    const inputProps = component.props;\n    const props = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n        const processedStyle = styles.map(style => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            if (component._isFirstRender) {\n              this._initialStyle = _objectSpread(_objectSpread(_objectSpread({}, style.initial.value), this._initialStyle), initialUpdaterRun(style.initial.updater));\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach(initialValueKey => {\n            var _animatedProp$initial;\n            props[initialValueKey] = (_animatedProp$initial = animatedProp.initial) === null || _animatedProp$initial === void 0 ? void 0 : _animatedProp$initial.value[initialValueKey];\n          });\n        }\n      } else if (has('workletEventHandler', value) && value.workletEventHandler instanceof WorkletEventHandler) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach(eventName => {\n            props[eventName] = has('listeners', value.workletEventHandler) ? value.workletEventHandler.listeners[eventName] : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}","map":{"version":3,"names":["_objectSpread","_defineProperty","isSharedValue","isChromeDebugger","WorkletEventHandler","initialUpdaterRun","hasInlineStyles","getInlineStyle","flattenArray","has","StyleSheet","dummyListener","PropsFilter","constructor","filterNonAnimatedProps","component","inputProps","props","key","value","styleProp","style","styles","processedStyle","map","viewDescriptors","_isFirstRender","_initialStyle","initial","updater","flatten","animatedProp","animatedProps","undefined","Object","keys","forEach","initialValueKey","_animatedProp$initial","workletEventHandler","eventNames","length","eventName","listeners"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/createAnimatedComponent/PropsFilter.tsx"],"sourcesContent":["'use strict';\n\nimport type { StyleProps } from '../commonTypes';\nimport { isSharedValue } from '../isSharedValue';\nimport { isChromeDebugger } from '../PlatformChecker';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport { initialUpdaterRun } from '../animation';\nimport { hasInlineStyles, getInlineStyle } from './InlinePropManager';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  IAnimatedComponentInternal,\n  IPropsFilter,\n} from './commonTypes';\nimport { flattenArray, has } from './utils';\nimport { StyleSheet } from 'react-native';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nexport class PropsFilter implements IPropsFilter {\n  private _initialStyle = {};\n\n  public filterNonAnimatedProps(\n    component: React.Component<unknown, unknown> & IAnimatedComponentInternal\n  ): Record<string, unknown> {\n    const inputProps =\n      component.props as AnimatedComponentProps<InitialComponentProps>;\n    const props: Record<string, unknown> = {};\n    for (const key in inputProps) {\n      const value = inputProps[key];\n      if (key === 'style') {\n        const styleProp = inputProps.style;\n        const styles = flattenArray<StyleProps>(styleProp ?? []);\n        const processedStyle: StyleProps[] = styles.map((style) => {\n          if (style && style.viewDescriptors) {\n            // this is how we recognize styles returned by useAnimatedStyle\n            if (component._isFirstRender) {\n              this._initialStyle = {\n                ...style.initial.value,\n                ...this._initialStyle,\n                ...initialUpdaterRun<StyleProps>(style.initial.updater),\n              };\n            }\n            return this._initialStyle;\n          } else if (hasInlineStyles(style)) {\n            return getInlineStyle(style, component._isFirstRender);\n          } else {\n            return style;\n          }\n        });\n        props[key] = StyleSheet.flatten(processedStyle);\n      } else if (key === 'animatedProps') {\n        const animatedProp = inputProps.animatedProps as Partial<\n          AnimatedComponentProps<AnimatedProps>\n        >;\n        if (animatedProp.initial !== undefined) {\n          Object.keys(animatedProp.initial.value).forEach((initialValueKey) => {\n            props[initialValueKey] =\n              animatedProp.initial?.value[initialValueKey];\n          });\n        }\n      } else if (\n        has('workletEventHandler', value) &&\n        value.workletEventHandler instanceof WorkletEventHandler\n      ) {\n        if (value.workletEventHandler.eventNames.length > 0) {\n          value.workletEventHandler.eventNames.forEach((eventName) => {\n            props[eventName] = has('listeners', value.workletEventHandler)\n              ? (\n                  value.workletEventHandler.listeners as Record<string, unknown>\n                )[eventName]\n              : dummyListener;\n          });\n        } else {\n          props[key] = dummyListener;\n        }\n      } else if (isSharedValue(value)) {\n        if (component._isFirstRender) {\n          props[key] = value.value;\n        }\n      } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}