{"ast":null,"code":"'use strict';\n\nimport { defineAnimation, getReduceMotionForAnimation } from \"../util.js\";\nimport { rubberBandDecay } from \"./rubberBandDecay.js\";\nimport { isValidRubberBandConfig } from \"./utils.js\";\nimport { rigidDecay } from \"./rigidDecay.js\";\nimport { ReanimatedError } from \"../../errors.js\";\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\n\nfunction validateConfig(config) {\n  'worklet';\n\n  if (config.clamp) {\n    if (!Array.isArray(config.clamp)) {\n      throw new ReanimatedError(`\\`config.clamp\\` must be an array but is ${typeof config.clamp}.`);\n    }\n    if (config.clamp.length !== 2) {\n      throw new ReanimatedError(`\\`clamp array\\` must contain 2 items but is given ${config.clamp.length}.`);\n    }\n  }\n  if (config.velocityFactor <= 0) {\n    throw new ReanimatedError(`\\`config.velocityFactor\\` must be greater then 0 but is ${config.velocityFactor}.`);\n  }\n  if (config.rubberBandEffect && !config.clamp) {\n    throw new ReanimatedError('You need to set `clamp` property when using `rubberBandEffect`.');\n  }\n}\n\n/**\n * Lets you create animations that mimic objects in motion with friction.\n *\n * @param config - The decay animation configuration - {@link DecayConfig}.\n * @param callback - A function called upon animation completion -\n *   {@link AnimationCallback}.\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withDecay\n */\nexport const withDecay = function (userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, () => {\n    'worklet';\n\n    const config = {\n      deceleration: 0.998,\n      velocityFactor: 1,\n      velocity: 0,\n      rubberBandFactor: 0.6\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(key => config[key] = userConfig[key]);\n    }\n    const decay = isValidRubberBandConfig(config) ? (animation, now) => rubberBandDecay(animation, now, config) : (animation, now) => rigidDecay(animation, now, config);\n    function onStart(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig(config);\n      if (animation.reduceMotion && config.clamp) {\n        if (value < config.clamp[0]) {\n          animation.current = config.clamp[0];\n        } else if (value > config.clamp[1]) {\n          animation.current = config.clamp[1];\n        }\n      }\n    }\n    return {\n      onFrame: decay,\n      onStart,\n      callback,\n      velocity: config.velocity ?? 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["defineAnimation","getReduceMotionForAnimation","rubberBandDecay","isValidRubberBandConfig","rigidDecay","ReanimatedError","validateConfig","config","clamp","Array","isArray","length","velocityFactor","rubberBandEffect","withDecay","userConfig","callback","deceleration","velocity","rubberBandFactor","Object","keys","forEach","key","decay","animation","now","onStart","value","current","lastTimestamp","startTimestamp","initialVelocity","reduceMotion","onFrame"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/animation/decay/decay.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation, getReduceMotionForAnimation } from '../util';\nimport type {\n  AnimationCallback,\n  Timestamp,\n  Animation,\n} from '../../commonTypes';\nimport { rubberBandDecay } from './rubberBandDecay';\nimport { isValidRubberBandConfig } from './utils';\nimport type {\n  DecayAnimation,\n  DecayConfig,\n  DefaultDecayConfig,\n  InnerDecayAnimation,\n} from './utils';\nimport { rigidDecay } from './rigidDecay';\nimport { ReanimatedError } from '../../errors';\n\nexport type WithDecayConfig = DecayConfig;\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype withDecayType = (\n  userConfig: DecayConfig,\n  callback?: AnimationCallback\n) => number;\n\nfunction validateConfig(config: DefaultDecayConfig): void {\n  'worklet';\n  if (config.clamp) {\n    if (!Array.isArray(config.clamp)) {\n      throw new ReanimatedError(\n        `\\`config.clamp\\` must be an array but is ${typeof config.clamp}.`\n      );\n    }\n    if (config.clamp.length !== 2) {\n      throw new ReanimatedError(\n        `\\`clamp array\\` must contain 2 items but is given ${\n          config.clamp.length as number\n        }.`\n      );\n    }\n  }\n  if (config.velocityFactor <= 0) {\n    throw new ReanimatedError(\n      `\\`config.velocityFactor\\` must be greater then 0 but is ${config.velocityFactor}.`\n    );\n  }\n  if (config.rubberBandEffect && !config.clamp) {\n    throw new ReanimatedError(\n      'You need to set `clamp` property when using `rubberBandEffect`.'\n    );\n  }\n}\n\n/**\n * Lets you create animations that mimic objects in motion with friction.\n *\n * @param config - The decay animation configuration - {@link DecayConfig}.\n * @param callback - A function called upon animation completion -\n *   {@link AnimationCallback}.\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withDecay\n */\nexport const withDecay = function (\n  userConfig: DecayConfig,\n  callback?: AnimationCallback\n): Animation<DecayAnimation> {\n  'worklet';\n\n  return defineAnimation<DecayAnimation>(0, () => {\n    'worklet';\n    const config: DefaultDecayConfig = {\n      deceleration: 0.998,\n      velocityFactor: 1,\n      velocity: 0,\n      rubberBandFactor: 0.6,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    const decay: (animation: InnerDecayAnimation, now: number) => boolean =\n      isValidRubberBandConfig(config)\n        ? (animation, now) => rubberBandDecay(animation, now, config)\n        : (animation, now) => rigidDecay(animation, now, config);\n\n    function onStart(\n      animation: DecayAnimation,\n      value: number,\n      now: Timestamp\n    ): void {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.startTimestamp = now;\n      animation.initialVelocity = config.velocity;\n      validateConfig(config);\n\n      if (animation.reduceMotion && config.clamp) {\n        if (value < config.clamp[0]) {\n          animation.current = config.clamp[0];\n        } else if (value > config.clamp[1]) {\n          animation.current = config.clamp[1];\n        }\n      }\n    }\n\n    return {\n      onFrame: decay,\n      onStart,\n      callback,\n      velocity: config.velocity ?? 0,\n      initialVelocity: 0,\n      current: 0,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n    } as DecayAnimation;\n  });\n} as unknown as withDecayType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}