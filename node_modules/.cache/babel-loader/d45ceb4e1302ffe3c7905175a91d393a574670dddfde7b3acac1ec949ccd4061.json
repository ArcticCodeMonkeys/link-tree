{"ast":null,"code":"'use strict';\n\nimport _objectSpread from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { ComplexAnimationBuilder } from \"../animationBuilder/index.js\";\n/**\n * Entry with change in rotation, scale, and opacity. You can modify the\n * behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelIn extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(1, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(1, config))\n            }, {\n              rotate: delayFunction(delay, animation('0', config))\n            }]\n          },\n          initialValues: _objectSpread({\n            opacity: 0,\n            transform: [{\n              scale: 0\n            }, {\n              rotate: '5'\n            }]\n          }, initialValues),\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new PinwheelIn();\n  }\n}\n\n/**\n * Exit with change in rotation, scale, and opacity. You can modify the behavior\n * by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\n_defineProperty(PinwheelIn, \"presetName\", 'PinwheelIn');\nexport class PinwheelOut extends ComplexAnimationBuilder {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"build\", () => {\n      const delayFunction = this.getDelayFunction();\n      const [animation, config] = this.getAnimationAndConfig();\n      const delay = this.getDelay();\n      const callback = this.callbackV;\n      const initialValues = this.initialValues;\n      return () => {\n        'worklet';\n\n        return {\n          animations: {\n            opacity: delayFunction(delay, animation(0, config)),\n            transform: [{\n              scale: delayFunction(delay, animation(0, config))\n            }, {\n              rotate: delayFunction(delay, animation('5', config))\n            }]\n          },\n          initialValues: _objectSpread({\n            opacity: 1,\n            transform: [{\n              scale: 1\n            }, {\n              rotate: '0'\n            }]\n          }, initialValues),\n          callback\n        };\n      };\n    });\n  }\n  static createInstance() {\n    return new PinwheelOut();\n  }\n}\n_defineProperty(PinwheelOut, \"presetName\", 'PinwheelOut');","map":{"version":3,"names":["_objectSpread","_defineProperty","ComplexAnimationBuilder","PinwheelIn","constructor","arguments","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","delay","getDelay","callback","callbackV","initialValues","animations","opacity","transform","scale","rotate","createInstance","PinwheelOut"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultAnimations/Pinwheel.ts"],"sourcesContent":["'use strict';\nimport type { BaseAnimationBuilder } from '../animationBuilder';\nimport { ComplexAnimationBuilder } from '../animationBuilder';\nimport type {\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n} from '../animationBuilder/commonTypes';\n\n/**\n * Entry with change in rotation, scale, and opacity. You can modify the\n * behavior by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelIn\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'PinwheelIn';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new PinwheelIn() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            {\n              scale: delayFunction(delay, animation(1, config)),\n            },\n            {\n              rotate: delayFunction(delay, animation('0', config)),\n            },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [\n            {\n              scale: 0,\n            },\n            {\n              rotate: '5',\n            },\n          ],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Exit with change in rotation, scale, and opacity. You can modify the behavior\n * by chaining methods like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#pinwheel\n */\nexport class PinwheelOut\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'PinwheelOut';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new PinwheelOut() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const delay = this.getDelay();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            {\n              scale: delayFunction(delay, animation(0, config)),\n            },\n            {\n              rotate: delayFunction(delay, animation('5', config)),\n            },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [\n            {\n              scale: 1,\n            },\n            {\n              rotate: '0',\n            },\n          ],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}