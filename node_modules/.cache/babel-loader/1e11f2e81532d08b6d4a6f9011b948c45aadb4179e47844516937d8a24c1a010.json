{"ast":null,"code":"'use strict';\n\nimport { ComplexAnimationBuilder } from \"../animationBuilder/index.js\";\n\n/**\n * Fade in animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeIn extends ComplexAnimationBuilder {\n  static presetName = 'FadeIn';\n  static createInstance() {\n    return new FadeIn();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config))\n        },\n        initialValues: {\n          opacity: 0,\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade from right animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInRight extends ComplexAnimationBuilder {\n  static presetName = 'FadeInRight';\n  static createInstance() {\n    return new FadeInRight();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [{\n            translateX: delayFunction(delay, animation(0, config))\n          }]\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{\n            translateX: 25\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade from left animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInLeft extends ComplexAnimationBuilder {\n  static presetName = 'FadeInLeft';\n  static createInstance() {\n    return new FadeInLeft();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [{\n            translateX: delayFunction(delay, animation(0, config))\n          }]\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{\n            translateX: -25\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade from top animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInUp extends ComplexAnimationBuilder {\n  static presetName = 'FadeInUp';\n  static createInstance() {\n    return new FadeInUp();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [{\n            translateY: delayFunction(delay, animation(0, config))\n          }]\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{\n            translateY: -25\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade from bottom animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInDown extends ComplexAnimationBuilder {\n  static presetName = 'FadeInDown';\n  static createInstance() {\n    return new FadeInDown();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [{\n            translateY: delayFunction(delay, animation(0, config))\n          }]\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{\n            translateY: 25\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade out animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOut extends ComplexAnimationBuilder {\n  static presetName = 'FadeOut';\n  static createInstance() {\n    return new FadeOut();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config))\n        },\n        initialValues: {\n          opacity: 1,\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade to right animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutRight extends ComplexAnimationBuilder {\n  static presetName = 'FadeOutRight';\n  static createInstance() {\n    return new FadeOutRight();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [{\n            translateX: delayFunction(delay, animation(25, config))\n          }]\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{\n            translateX: 0\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade to left animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutLeft extends ComplexAnimationBuilder {\n  static presetName = 'FadeOutLeft';\n  static createInstance() {\n    return new FadeOutLeft();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [{\n            translateX: delayFunction(delay, animation(-25, config))\n          }]\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{\n            translateX: 0\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n/**\n * Fade to top animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutUp extends ComplexAnimationBuilder {\n  static presetName = 'FadeOutUp';\n  static createInstance() {\n    return new FadeOutUp();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [{\n            translateY: delayFunction(delay, animation(-25, config))\n          }]\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{\n            translateY: 0\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}\n\n/**\n * Fade to bottom animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutDown extends ComplexAnimationBuilder {\n  static presetName = 'FadeOutDown';\n  static createInstance() {\n    return new FadeOutDown();\n  }\n  build = () => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n    return () => {\n      'worklet';\n\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [{\n            translateY: delayFunction(delay, animation(25, config))\n          }]\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{\n            translateY: 0\n          }],\n          ...initialValues\n        },\n        callback\n      };\n    };\n  };\n}","map":{"version":3,"names":["ComplexAnimationBuilder","FadeIn","presetName","createInstance","build","delayFunction","getDelayFunction","animation","config","getAnimationAndConfig","callback","callbackV","initialValues","delay","getDelay","animations","opacity","FadeInRight","transform","translateX","FadeInLeft","FadeInUp","translateY","FadeInDown","FadeOut","FadeOutRight","FadeOutLeft","FadeOutUp","FadeOutDown"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/defaultAnimations/Fade.ts"],"sourcesContent":["'use strict';\nimport type {\n  IEntryExitAnimationBuilder,\n  EntryExitAnimationFunction,\n} from '../animationBuilder/commonTypes';\nimport type { BaseAnimationBuilder } from '../animationBuilder';\nimport { ComplexAnimationBuilder } from '../animationBuilder';\n\n/**\n * Fade in animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeIn\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeIn';\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeIn() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n        },\n        initialValues: {\n          opacity: 0,\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade from right animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInRight\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeInRight';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeInRight() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            { translateX: delayFunction(delay, animation(0, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{ translateX: 25 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade from left animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInLeft\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeInLeft';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeInLeft() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            { translateX: delayFunction(delay, animation(0, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{ translateX: -25 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade from top animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInUp\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeInUp';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeInUp() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            { translateY: delayFunction(delay, animation(0, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{ translateY: -25 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade from bottom animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `entering` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeInDown\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeInDown';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeInDown() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(1, config)),\n          transform: [\n            { translateY: delayFunction(delay, animation(0, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 0,\n          transform: [{ translateY: 25 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade out animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOut\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeOut';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeOut() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n        },\n        initialValues: {\n          opacity: 1,\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade to right animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutRight\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeOutRight';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeOutRight() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            { translateX: delayFunction(delay, animation(25, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{ translateX: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade to left animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutLeft\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeOutLeft';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeOutLeft() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            { translateX: delayFunction(delay, animation(-25, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{ translateX: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n/**\n * Fade to top animation. You can modify the behavior by chaining methods like\n * `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutUp\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeOutUp';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeOutUp() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            { translateY: delayFunction(delay, animation(-25, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{ translateY: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n\n/**\n * Fade to bottom animation. You can modify the behavior by chaining methods\n * like `.springify()` or `.duration(500)`.\n *\n * You pass it to the `exiting` prop on [an Animated\n * component](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animated-component).\n *\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/entering-exiting-animations#fade\n */\nexport class FadeOutDown\n  extends ComplexAnimationBuilder\n  implements IEntryExitAnimationBuilder\n{\n  static presetName = 'FadeOutDown';\n\n  static createInstance<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    return new FadeOutDown() as InstanceType<T>;\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delayFunction = this.getDelayFunction();\n    const [animation, config] = this.getAnimationAndConfig();\n    const callback = this.callbackV;\n    const initialValues = this.initialValues;\n    const delay = this.getDelay();\n\n    return () => {\n      'worklet';\n      return {\n        animations: {\n          opacity: delayFunction(delay, animation(0, config)),\n          transform: [\n            { translateY: delayFunction(delay, animation(25, config)) },\n          ],\n        },\n        initialValues: {\n          opacity: 1,\n          transform: [{ translateY: 0 }],\n          ...initialValues,\n        },\n        callback,\n      };\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}