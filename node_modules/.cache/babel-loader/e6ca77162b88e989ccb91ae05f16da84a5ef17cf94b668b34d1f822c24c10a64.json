{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"/Users/carter/WebstormProjects/personal-website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { withDelay } from \"../../animation/index.js\";\nimport { ReduceMotion } from \"../../commonTypes.js\";\nimport { getReduceMotionFromConfig } from \"../../animation/util.js\";\nimport { ReanimatedError } from \"../../errors.js\";\nexport class BaseAnimationBuilder {\n  constructor() {\n    _defineProperty(this, \"reduceMotionV\", ReduceMotion.System);\n    _defineProperty(this, \"randomizeDelay\", false);\n    _defineProperty(this, \"build\", () => {\n      throw new ReanimatedError('Unimplemented method in child class.');\n    });\n  }\n  /**\n   * Lets you adjust the animation duration. Can be chained alongside other\n   * [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param durationMs - Length of the animation (in milliseconds).\n   */\n  static duration(durationMs) {\n    const instance = this.createInstance();\n    return instance.duration(durationMs);\n  }\n  duration(durationMs) {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the delay before the animation starts (in milliseconds).\n   * Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param delayMs - Delay before the animation starts (in milliseconds).\n   */\n  static delay(delayMs) {\n    const instance = this.createInstance();\n    return instance.delay(delayMs);\n  }\n  delay(delayMs) {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  /**\n   * The callback that will fire after the animation ends. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param callback - Callback that will fire after the animation ends.\n   */\n  static withCallback(callback) {\n    const instance = this.createInstance();\n    return instance.withCallback(callback);\n  }\n  withCallback(callback) {\n    this.callbackV = callback;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the behavior when the device's reduced motion accessibility\n   * setting is turned on. Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   */\n  static reduceMotion(reduceMotion) {\n    const instance = this.createInstance();\n    return instance.reduceMotion(reduceMotion);\n  }\n  reduceMotion(reduceMotionV) {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  // 300ms is the default animation duration. If any animation has different default has to override this method.\n  static getDuration() {\n    return 300;\n  }\n  getDuration() {\n    var _this$durationV;\n    return (_this$durationV = this.durationV) !== null && _this$durationV !== void 0 ? _this$durationV : 300;\n  }\n\n  /** @deprecated Use `.delay()` with `Math.random()` instead */\n  static randomDelay() {\n    const instance = this.createInstance();\n    return instance.randomDelay();\n  }\n  randomDelay() {\n    this.randomizeDelay = true;\n    return this;\n  }\n\n  // when randomizeDelay is set to true, randomize delay between 0 and provided value (or 1000ms if delay is not provided)\n  getDelay() {\n    var _this$delayV, _this$delayV2;\n    return this.randomizeDelay ? Math.random() * ((_this$delayV = this.delayV) !== null && _this$delayV !== void 0 ? _this$delayV : 1000) : (_this$delayV2 = this.delayV) !== null && _this$delayV2 !== void 0 ? _this$delayV2 : 0;\n  }\n  getReduceMotion() {\n    return this.reduceMotionV;\n  }\n  getDelayFunction() {\n    const isDelayProvided = this.randomizeDelay || this.delayV;\n    const reduceMotion = this.getReduceMotion();\n    return isDelayProvided ? (delay, animation) => {\n      'worklet';\n\n      return withDelay(delay, animation, reduceMotion);\n    } : (_, animation) => {\n      'worklet';\n\n      animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n      return animation;\n    };\n  }\n  static build() {\n    const instance = this.createInstance();\n    return instance.build();\n  }\n}","map":{"version":3,"names":["_defineProperty","withDelay","ReduceMotion","getReduceMotionFromConfig","ReanimatedError","BaseAnimationBuilder","constructor","System","duration","durationMs","instance","createInstance","durationV","delay","delayMs","delayV","withCallback","callback","callbackV","reduceMotion","reduceMotionV","getDuration","_this$durationV","randomDelay","randomizeDelay","getDelay","_this$delayV","_this$delayV2","Math","random","getReduceMotion","getDelayFunction","isDelayProvided","animation","_","build"],"sources":["/Users/carter/WebstormProjects/personal-website/node_modules/react-native-reanimated/src/layoutReanimation/animationBuilder/BaseAnimationBuilder.ts"],"sourcesContent":["'use strict';\nimport { withDelay } from '../../animation';\nimport type {\n  EntryExitAnimationFunction,\n  AnimationFunction,\n  LayoutAnimationFunction,\n} from './commonTypes';\n\nimport { ReduceMotion } from '../../commonTypes';\nimport { getReduceMotionFromConfig } from '../../animation/util';\nimport { ReanimatedError } from '../../errors';\n\nexport class BaseAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  randomizeDelay = false;\n  callbackV?: (finished: boolean) => void;\n\n  static createInstance: <T extends typeof BaseAnimationBuilder>(\n    this: T\n  ) => InstanceType<T>;\n\n  build = (): EntryExitAnimationFunction | LayoutAnimationFunction => {\n    throw new ReanimatedError('Unimplemented method in child class.');\n  };\n\n  /**\n   * Lets you adjust the animation duration. Can be chained alongside other\n   * [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param durationMs - Length of the animation (in milliseconds).\n   */\n  static duration<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    durationMs: number\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.duration(durationMs);\n  }\n\n  duration(durationMs: number): this {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the delay before the animation starts (in milliseconds).\n   * Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param delayMs - Delay before the animation starts (in milliseconds).\n   */\n  static delay<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    delayMs: number\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.delay(delayMs);\n  }\n\n  delay(delayMs: number): this {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  /**\n   * The callback that will fire after the animation ends. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param callback - Callback that will fire after the animation ends.\n   */\n  static withCallback<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    callback: (finished: boolean) => void\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.withCallback(callback);\n  }\n\n  withCallback(callback: (finished: boolean) => void): this {\n    this.callbackV = callback;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the behavior when the device's reduced motion accessibility\n   * setting is turned on. Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param reduceMotion - Determines how the animation responds to the device's\n   *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n   *   {@link ReduceMotion}.\n   */\n  static reduceMotion<T extends typeof BaseAnimationBuilder>(\n    this: T,\n    reduceMotion: ReduceMotion\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.reduceMotion(reduceMotion);\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  // 300ms is the default animation duration. If any animation has different default has to override this method.\n  static getDuration(): number {\n    return 300;\n  }\n\n  getDuration(): number {\n    return this.durationV ?? 300;\n  }\n\n  /** @deprecated Use `.delay()` with `Math.random()` instead */\n  static randomDelay<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): InstanceType<T> {\n    const instance = this.createInstance();\n    return instance.randomDelay();\n  }\n\n  randomDelay(): this {\n    this.randomizeDelay = true;\n    return this;\n  }\n\n  // when randomizeDelay is set to true, randomize delay between 0 and provided value (or 1000ms if delay is not provided)\n  getDelay(): number {\n    return this.randomizeDelay\n      ? Math.random() * (this.delayV ?? 1000)\n      : (this.delayV ?? 0);\n  }\n\n  getReduceMotion(): ReduceMotion {\n    return this.reduceMotionV;\n  }\n\n  getDelayFunction(): AnimationFunction {\n    const isDelayProvided = this.randomizeDelay || this.delayV;\n    const reduceMotion = this.getReduceMotion();\n    return isDelayProvided\n      ? (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  static build<T extends typeof BaseAnimationBuilder>(\n    this: T\n  ): EntryExitAnimationFunction | LayoutAnimationFunction {\n    const instance = this.createInstance();\n    return instance.build();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}